expand = unit(2, "mm") ,
radius = unit(2, "mm") ,
label.buffer = unit(5, "mm") ,
label.fill = "grey90")+
coord_sf(xlim=c(2600000,4100000) ,
ylim=c(1600000,3100000))+
theme_bw()+
labs(x="Longitude",
y="Latitude")+
scale_y_continuous(labels=scaleFUN)
# theme(plot.margin = unit(c(0.1,0.1,0.1,0.1), "cm"),
#       axis.title = element_blank(),
#       axis.text.x = element_text(size = 20),
#       axis.text.y = element_text(size = 20) )
)
(p1  <-
ggplot(MiniEU_map) +
geom_sf(linewidth=0.5,alpha=0.93,
fill="#CFCFCF",colour="grey30")+
ggforce::geom_mark_ellipse(data=df_P1,
aes(x=lon,
y=lat,
label = ID,
description=Site) ,
linewidth=0.3,
fill="goldenrod",
show.legend=F,
label.hjust = 0.5,
con.size = 2,
con.colour = "goldenrod4",
label.fontsize = c(25,20),
alpha=0.8,
expand = unit(2, "mm") ,
radius = unit(2, "mm") ,
label.buffer = unit(5, "mm") ,
label.fill = "grey90")+
coord_sf(xlim=c(2600000,4100000) ,
ylim=c(1600000,3100000))+
theme_void()+
labs(x="Longitude",
y="Latitude")+
scale_y_continuous(labels=scaleFUN)
# theme(plot.margin = unit(c(0.1,0.1,0.1,0.1), "cm"),
#       axis.title = element_blank(),
#       axis.text.x = element_text(size = 20),
#       axis.text.y = element_text(size = 20) )
)
ggplot(MiniEU_map) +
geom_sf(linewidth=0.5,alpha=0.93,
fill="#CFCFCF",colour="grey30")+
ggforce::geom_mark_ellipse(data=df_P1,
aes(x=lon,
y=lat,
label = ID,
description=Site) ,
linewidth=0.3,
fill="goldenrod",
show.legend=F,
label.hjust = 0.5,
con.size = 2,
con.colour = "goldenrod4",
label.fontsize = c(25,20),
alpha=0.8,
expand = unit(2, "mm") ,
radius = unit(5, "mm") ,
label.buffer = unit(5, "mm") ,
label.fill = "grey90")+
coord_sf(xlim=c(2600000,4100000) ,
ylim=c(1600000,3100000))+
theme_void()+
labs(x="Longitude",
y="Latitude")+
scale_y_continuous(labels=scaleFUN)
# theme(plot.margin = unit(c(0.1,0.1,0.1,0.1), "cm"),
#       axis.title = element_blank(),
ggplot(MiniEU_map) +
geom_sf(linewidth=0.5,alpha=0.93,
fill="#CFCFCF",colour="grey30")+
ggforce::geom_mark_ellipse(data=df_P1,
aes(x=lon,
y=lat,
label = ID,
description=Site) ,
linewidth=0.3,
fill="goldenrod",
show.legend=F,
label.hjust = 0.5,
con.size = 2,
con.colour = "goldenrod4",
label.fontsize = c(25,20),
alpha=0.8,
expand = unit(4, "mm") ,
radius = unit(2, "mm") ,
label.buffer = unit(5, "mm") ,
label.fill = "grey90")+
coord_sf(xlim=c(2600000,4100000) ,
ylim=c(1600000,3100000))+
theme_void()+
labs(x="Longitude",
y="Latitude")+
scale_y_continuous(labels=scaleFUN)
ggplot(MiniEU_map) +
geom_sf(linewidth=0.5,alpha=0.93,
fill="#CFCFCF",colour="grey30")+
ggforce::geom_mark_ellipse(data=df_P1,
aes(x=lon,
y=lat,
label = ID,
description=Site) ,
linewidth=0.3,
fill="goldenrod",
show.legend=F,
label.hjust = 0.5,
con.size = 2,
con.colour = "goldenrod4",
label.fontsize = c(25,20),
alpha=0.8,
expand = unit(2, "mm") ,
radius = unit(2, "mm") ,
label.buffer = unit(10, "mm") ,
label.fill = "grey90")+
coord_sf(xlim=c(2600000,4100000) ,
ylim=c(1600000,3100000))+
theme_void()+
labs(x="Longitude",
y="Latitude")+
scale_y_continuous(labels=scaleFUN)
# theme(plot.margin = unit(c(0.1,0.1,0.1,
ggplot(MiniEU_map) +
geom_sf(linewidth=0.5,alpha=0.93,
fill="#CFCFCF",colour="grey30")+
ggforce::geom_mark_ellipse(data=df_P1,
aes(x=lon,
y=lat,
label = ID,
description=Site) ,
linewidth=0.3,
fill="goldenrod",
show.legend=F,
label.hjust = 0.5,
con.size = 5,
con.colour = "goldenrod4",
label.fontsize = c(25,20),
alpha=0.8,
expand = unit(2, "mm") ,
radius = unit(2, "mm") ,
label.buffer = unit(10, "mm") ,
label.fill = "grey90")+
coord_sf(xlim=c(2600000,4100000) ,
ylim=c(1600000,3100000))+
theme_void()+
labs(x="Longitude",
y="Latitude")+
scale_y_continuous(labels=scaleFUN)
ggplot(MiniEU_map) +
geom_sf(linewidth=0.5,alpha=0.93,
fill="#CFCFCF",colour="grey30")+
ggforce::geom_mark_ellipse(data=df_P1,
aes(x=lon,
y=lat,
label = ID,
description=Site) ,
linewidth=0.3,
fill="goldenrod",
show.legend=F,
label.hjust = 0,
con.size = 2,
con.colour = "goldenrod4",
label.fontsize = c(25,20),
alpha=0.8,
expand = unit(2, "mm") ,
radius = unit(2, "mm") ,
label.buffer = unit(10, "mm") ,
label.fill = "grey90")+
coord_sf(xlim=c(2600000,4100000) ,
ylim=c(1600000,3100000))+
theme_void()+
labs(x="Longitude",
y="Latitude")+
scale_y_continuous(labels=scaleFUN)
ggplot(MiniEU_map) +
geom_sf(linewidth=0.5,alpha=0.93,
fill="#CFCFCF",colour="grey30")+
ggforce::geom_mark_ellipse(data=df_P1,
aes(x=lon,
y=lat,
label = ID,
description=Site) ,
linewidth=0.3,
fill="goldenrod",
show.legend=F,
label.hjust = 0.5,
con.size = 2,
con.colour = "goldenrod4",
label.fontsize = c(25,20),
alpha=0.8,
expand = unit(2, "mm") ,
radius = unit(2, "mm") ,
label.buffer = unit(20, "mm") ,
label.fill = "grey90")+
coord_sf(xlim=c(2600000,4100000) ,
ylim=c(1600000,3100000))+
theme_void()+
labs(x="Longitude",
y="Latitude")+
scale_y_continuous(labels=scaleFUN)
ggplot(MiniEU_map) +
geom_sf(linewidth=0.5,alpha=0.93,
fill="#CFCFCF",colour="grey30")+
ggforce::geom_mark_ellipse(data=df_P1,
aes(x=lon,
y=lat,
label = ID,
description=Site) ,
linewidth=0.3,
fill="goldenrod",
show.legend=F,
label.hjust = 0.5,
con.size = 2,
con.colour = "goldenrod4",
label.fontsize = c(25,20),
alpha=0.8,
expand = unit(20, "mm") ,
radius = unit(2, "mm") ,
label.buffer = unit(10, "mm") ,
label.fill = "grey90")+
coord_sf(xlim=c(2600000,4100000) ,
ylim=c(1600000,3100000))+
theme_void()+
labs(x="Longitude",
y="Latitude")+
scale_y_continuous(labels=scaleFUN)
ggplot(MiniEU_map) +
geom_sf(linewidth=0.5,alpha=0.93,
fill="#CFCFCF",colour="grey30")+
ggforce::geom_mark_ellipse(data=df_P1,
aes(x=lon,
y=lat,
label = ID,
description=Site) ,
linewidth=0.3,
fill="goldenrod",
show.legend=F,
label.hjust = 0.5,
con.size = 10,
con.colour = "goldenrod4",
label.fontsize = c(25,20),
alpha=0.8,
expand = unit(2, "mm") ,
radius = unit(2, "mm") ,
label.buffer = unit(10, "mm") ,
label.fill = "grey90")+
coord_sf(xlim=c(2600000,4100000) ,
ylim=c(1600000,3100000))+
theme_void()+
labs(x="Longitude",
y="Latitude")+
scale_y_continuous(labels=scaleFUN)
df_P2<-Projects_df %>%
mutate(ID = c(1:nrow(.))) %>%
mutate(Site = case_when(ID == 1 ~ "Aveiro Lagoon",
ID == 2 ~ "Morbihan Gulf",
ID == 3 ~ "Bourgneuf Bay",
TRUE ~ "NA"),
ID = case_when(ID == 1 ~ "Portugal",
ID == 2 ~ "France",
TRUE ~ "France")) %>%
dplyr::select(c(lon,lat,ID,Site))
ggplot(MiniEU_map) +
geom_sf(linewidth=0.5,alpha=0.93,
fill="#CFCFCF",colour="grey30")+
ggforce::geom_mark_ellipse(data=df_P2,
aes(x=lon,
y=lat,
label = ID,
description=Site) ,
linewidth=0.3,
label.width = 10,
fill="goldenrod",
show.legend=F,
label.hjust = 0.5,
con.size = 2,
con.colour = "goldenrod4",
label.fontsize = c(25,20),
alpha=0.8,
expand = unit(2, "mm") ,
radius = unit(2, "mm") ,
label.buffer = unit(10, "mm") ,
label.fill = "grey90")+
coord_sf(xlim=c(2600000,4100000) ,
ylim=c(1600000,3100000))+
theme_void()+
labs(x="Longitude",
y="Latitude")+
scale_y_continuous(labels=scaleFUN)
ggplot(MiniEU_map) +
geom_sf(linewidth=0.5,alpha=0.93,
fill="#CFCFCF",colour="grey30")+
ggforce::geom_mark_ellipse(data=df_P2,
aes(x=lon,
y=lat,
label = ID,
description=Site) ,
linewidth=0.3,
label.width = 20,
fill="goldenrod",
show.legend=F,
label.hjust = 0.5,
con.size = 2,
con.colour = "goldenrod4",
label.fontsize = c(25,20),
alpha=0.8,
expand = unit(2, "mm") ,
radius = unit(2, "mm") ,
label.buffer = unit(10, "mm") ,
label.fill = "grey90")+
coord_sf(xlim=c(2600000,4100000) ,
ylim=c(1600000,3100000))+
theme_void()+
labs(x="Longitude",
y="Latitude")+
scale_y_continuous(labels=scaleFUN)
p2  <-
ggplot(MiniEU_map) +
geom_sf(linewidth=0.5,alpha=0.93,
fill="#CFCFCF",colour="grey30")+
ggforce::geom_mark_ellipse(data=df_P2,
aes(x=lon,
y=lat,
label = ID,
description=Site) ,
linewidth=0.3,
label.width = 20,
fill="goldenrod",
show.legend=F,
label.hjust = 0.5,
con.size = 2,
con.colour = "goldenrod4",
label.fontsize = c(25,20),
alpha=0.8,
expand = unit(2, "mm") ,
radius = unit(2, "mm") ,
label.buffer = unit(10, "mm") ,
label.fill = "grey90")+
coord_sf(xlim=c(2600000,4100000) ,
ylim=c(1600000,3100000))+
theme_void()+
labs(x="Longitude",
y="Latitude")+
scale_y_continuous(labels=scaleFUN)
ggsave("Figures/High_res/Figure1/Graphical_Abstract_Map.png",p2,width= 10, height=10)
check_and_install <- function(pkg){
# Check if the package is already installed
if (!require(pkg, character.only = TRUE)) {
# If not installed, install it
install.packages(pkg, dependencies = TRUE)
# Load the package after installation
library(pkg, character.only = TRUE)
message(paste("Package", pkg, "was installed and loaded."))
} else {
# If already installed, just load it
library(pkg, character.only = TRUE)
message(paste("Package", pkg, "is already installed and loaded."))
}
}
check_and_install("readr")
check_and_install("tidyverse")
check_and_install("rstudioapi")
filepath <- selectFile(caption = "Select the csv")
output <- gsub(".csv","_reframed.csv",filepath)
df <- read_csv(filepath) %>%
pivot_longer(-c(GPS,Transect,Station,Replicate,x,y,Comments), names_to = "Metric",values_to = "Value") %>%
mutate(Value = case_when(is.na(Value) ~ 0,
T ~ Value)) %>%
dplyr::filter(!is.na(x)) %>%
group_by(Transect,Station,Metric) %>%
reframe(Value = mean(Value),
x = mean(x),
y = mean(y)) %>%
mutate(Sample_name = paste0(Transect,Station)) %>%
dplyr::select(Sample_name,x,y,Metric,Value) %>%
pivot_wider(names_from = Metric, values_from = Value)
readr::write_csv(df,output)
library(flextable)
library(tidyverse)
library(tidyterra)
# library(tidymodels)
library(Utilities.Package)
library(patchwork)
library(sf)
library(rnaturalearth)
library(rnaturalearthdata)
library(rnaturalearthhires)
install.packages(rnaturalearthhires)
install.packages("rnaturalearthhires")
df<-data.frame(
Country = c(
rep("France",5),
rep("Portugal",4)
),
Site = c(
rep("Gulf of Morbihan",3),
rep("Bourgneuf Bay",2),
rep("Aveiro Lagoon",4)
),
Name = c(
"Arz Island",
"Duer",
"Duer",
"BarbÃ¢tre",
"L'Epine",
"Marinha Lanzarote",
"Mataducos",
"Gafanha",
"Gafanha"
),
Altitude = c(
"12m",
"12m",
"120m",
"120m",
"120m",
"120m",
"120m",
"120m",
"12m"
),
Utility = c(
"Training",
"Training",
"Validation",
"Validation",
"Validation",
"Validation",
"Validation",
"Validation",
"Training"
),
Date = c(
"29/09/2022",
"14/07/2022",
"14/07/2022",
"07/09/2021",
"08/07/2021",
"17/06/2022",
"16/06/2022",
"15/06/2022",
"15/06/2022"
)
)
brdr1 <- fp_border_default(color = "black", width = 1)
brdr2 <- fp_border_default(color = "grey", width = 1.5)
brdr3 <- fp_border_default(color = "grey40", width = 1.5)
i = 16.5 # width of the side borders in the word_document output (in centimeters)
w = i*0.3937 # width of the side borders in the word_document output (in inches)
flx1<-flextable(df)  %>%
flextable::width(width = (w/(ncol(df)))) %>%
merge_v(j = 1) %>%
merge_v(j = 2) %>%
border_remove() %>%
hline_top(border=brdr1) %>%
hline(i=5, border=brdr1) %>%
hline(i=1,j = 3:6, border=brdr2) %>%
hline(i=2, border=brdr2) %>%
hline(i=3, j = 2:6, border=brdr3) %>%
hline(i=4, j = 3:6, border=brdr2) %>%
hline(i=6, border=brdr2) %>%
hline(i=6, j = 1:2, border=brdr1) %>%
hline(i=7, border=brdr2) %>%
hline(i=8, border=brdr2) %>%
hline(i=9, border=brdr1) %>%
vline(j=2, border = brdr1) %>%
flextable::align(align = "center",part = "all") %>%
flextable::align(align = "center",part = "header") %>%
# set_caption(caption = "Table 1 List of drone Flight, summarising the date, the altitude and the purpose of each flight.") %>%
set_table_properties(layout = "autofit")
#| cache: false
#| echo: false
#| warning: false
#| eval: true
library(flextable)
library(tidyverse)
library(tidyterra)
# library(tidymodels)
library(Utilities.Package)
library(patchwork)
library(sf)
library(rnaturalearth)
library(rnaturalearthdata)
# library(rnaturalearthhires)
library(ggforce)
library(patchwork)
library(terra)
library(gt)
library(scales)
library(magick)
library(grid)
library(ggforce)
library(statebins)
library(ggridges)
library(ggspatial)
library(terrainr)
# library(ggpmisc)
library(broom)
library(stars)
library(gmodels)
library(caret)
library(rstudioapi)
library(terra)
library(MapRs)
options(scipen = 100000000)
# terraOptions(cores = 12)
