scale_y_continuous(limits = c(46.9882,46.98935),
breaks =  46.9890)+
theme_Bede_Map()+
theme(
# axis.text.x =element_text(size = 20, angle = 20, hjust = 1),
axis.text.x =element_blank(),
axis.title = element_blank(),
axis.text.y = element_text(size = 20))+
coord_sf(crs = 4326)
RGB_Dike_map
zoom_Pred_dike_map<-ggplot()+
tidyterra::geom_spatraster(data = zoom_Pred_dike, mapping = aes(fill = layer), show.legend = F)+
scale_fill_manual(values=c("#A3A3A3","#b3ff1a","#389318","#5C2E1A","#42c9bc"),
na.value = NA,
name = "",
labels = c("Sediment",
"Chlorphyceae",
"Magnoliopsida",
"Phaeophyceae",
"Water"))+
geom_sf(data = zoom_Dike_high_sf, fill = "transparent", linetype = "dashed",colour = "black", linewidth = 1)+
theme_void()
zoom_Pred_dike_map
zoom_Pred_dike_map<-ggplot()+
tidyterra::geom_spatraster(data = zoom_Pred_dike, mapping = aes(fill = layer), show.legend = F)+
scale_fill_manual(values=c("#A3A3A3","#b3ff1a","#389318","#5C2E1A","#42c9bc"),
na.value = NA,
name = "",
labels = c("Sediment",
"Chlorphyceae",
"Magnoliopsida",
"Phaeophyceae",
"Water"))+
geom_sf(data = zoom_Dike_high_sf, fill = "transparent", linetype = "dashed",colour = "black", linewidth = 1)+
theme_void()
zoom_Pred_dike<-Dike_Pred_masked %>%
crop(zoom_Dike_high_sf)
Dike_Pred<-imglist %>%
filter(str_detect(path,"Noirmoutier_highPrediction_nnNewStanRawMetrics_Preds_NoXantho_7_4326.tif")) %>%
pull(path) %>%
rast()
names(Dike_Pred)<-c("layer")
imglist %>%
filter(str_detect(path,"Noirmoutier_highPrediction_nnNewStanRawMetrics_Preds_NoXantho_7_4326.tif")) %>%
pull(path)
Dike_Pred<-imglist %>%
filter(str_detect(path,"Noirmoutier_highPrediction_nnNewStanRawMetrics_Preds_NoXantho_7_4326.tif")) %>%
slice(1) %>%
pull(path) %>%
rast()
names(Dike_Pred)<-c("layer")
values(Dike_Pred)[values(Dike_Pred) == 0] = NA
Dike_Pred_masked<-Dike_Pred %>%
crop(mask_Dike) %>%
mask(mask_Dike) %>%
as.factor()
zoom_Pred_dike<-Dike_Pred_masked %>%
crop(zoom_Dike_high_sf)
zoom_Pred_dike_map<-ggplot()+
tidyterra::geom_spatraster(data = zoom_Pred_dike, mapping = aes(fill = layer), show.legend = F)+
scale_fill_manual(values=c("#A3A3A3","#b3ff1a","#389318","#5C2E1A","#42c9bc"),
na.value = NA,
name = "",
labels = c("Sediment",
"Chlorphyceae",
"Magnoliopsida",
"Phaeophyceae",
"Water"))+
geom_sf(data = zoom_Dike_high_sf, fill = "transparent", linetype = "dashed",colour = "black", linewidth = 1)+
theme_void()
zoom_Pred_dike_map
Dike_pred_map<-ggplot()+
geom_sf(data = background_Dike,
mapping = aes(fill = Type),
show.legend = F,
linewidth=0.05,
alpha=0.93,
colour="grey30")+
geom_sf(data = background_Dike,
fill = "white",
show.legend = F,
linewidth=0.05,
alpha=0.4,
colour="white")+
scale_fill_manual("",
labels = c("Intertidal area", "Land area", "water"),
values = c("#7DC27D", "#CFCFCF","#42c9bc"))+
ggnewscale::new_scale("fill")+
tidyterra::geom_spatraster(data = Dike_Pred_masked,
mapping = aes(fill = layer),
maxcell = 5010420,
)+
scale_fill_manual(breaks = c(1,2,5,6,7,8,10),
values=c("#A3A3A3", "#b3ff1a", "#DAA520", "#389318","#5C2E1A","#b3002d", "#42c9bc",NA,NA,NA,NA),
na.value = NA,
name = "",
labels = c("Sediment",
"Chlorophyceae",
"Bacillariophyceae",
"Magnoliopsida",
"Phaeophyceae",
"Rhodophyceae",
"Water"))+
ggnewscale::new_scale("fill")+
geom_sf(data = zoom_Dike_high_sf,
fill = "transparent",
colour = "black",
linetype = "dashed",
linewidth = 1)+
annotation_custom(ggplotGrob(zoom_Pred_dike_map),
xmin = -2.226,
ymin = 46.9888,
ymax = 46.9893) +
geom_path(aes(x,y,group=grp),
data = data.frame(x = c(-2.226834,-2.225905,-2.226834,-2.225905),
y=c(46.9886439,46.9892105,46.9885538,46.988805),
grp=c(1,1,2,2)),
linetype = "dashed", linewidth = 1)+
# annotation_custom(ggplotGrob(Boat_Pred_zoomed_map), xmin = -8.697, xmax = -8.692, ymin = 40.667,ymax = 40.6705) +
coord_sf(crs = 4326)+
theme_Bede_Map()+
theme(axis.text.x = element_text(size = 20, angle = 20,hjust = 1),
axis.title = element_blank(),
axis.text.y = element_text(size = 20),
legend.background = element_blank(),
legend.position = c(1,0.50),
legend.text = element_text(size = 18),
legend.key.size = unit(0.8,"cm"))+
scale_x_continuous(limits = c(-2.2293,-2.2253),
breaks =  -2.228)+
scale_y_continuous(limits = c(46.9882,46.98935),
breaks =  46.9890)
Dike_pred_map
plot_Dike<-RGB_Dike_map/
Dike_pred_map
ggsave("Figures/Maps Pred/FigX-Dike_Pred.png",plot_Dike , width = 1200*4, height = 900*4, units = "px")
plot_Dike<-RGB_Dike_map/
Dike_pred_map
ggsave("Figures/High_res/Maps Pred/FigX-Dike_Pred.png",plot_Dike , width = 1200*4, height = 900*4, units = "px")
df_validation<-"Output/Validation_data" %>%
list.files("ResultsNewNN_NoXanthowithNDVIWithOldandBoat.csv",recursive = T, full.names = T) %>%
read.csv() %>%
as_tibble() %>%
rename(Truth_ID = "Truth") %>%
mutate(Truth =  case_when(Truth_ID == 1 ~ "Sediment",
Truth_ID == 2 ~ "Chlorophyceae",
Truth_ID == 3 ~ "Sediment",
Truth_ID == 4 ~ "Magnoliopsida",
Truth_ID == 5 ~ "Bacillariophyceae",
Truth_ID == 6 ~ "Magnoliopsida",
Truth_ID == 7 ~ "Phaeophyceae",
Truth_ID == 8 ~ "Rhodophyceae",
Truth_ID == 9 ~ "SunGlint",
Truth_ID == 10 ~ "Water",
Truth_ID == 11 ~ "Xanthophyceae",
Truth_ID == 12 ~ "Spartina",
Truth_ID == 41 ~ "Bleached seagrasses",
TRUE ~ "NA"),
Pred_Class = case_when(Pred_Class == "Clorophyta" ~ "Chlorophyta",
Pred_Class == "Rhodphyta" ~ "Rhodphyta",
Pred_Class == "Deep_Sediment" ~ "Sediment",
Pred_Class == "MPB" ~ "Sediment",
(Pred_Class == "Low_SPC" & NDVI > 0.2) ~ "Magnoliosida",
(Pred_Class == "Low_SPC" & NDVI <= 0.2 )~ "Sediment",
TRUE ~ Pred_Class)) %>%
dplyr::filter(
# Truth != "Water",
Truth  != "Spartina",
Truth != "SunGlint",
Truth != "Bleached seagrasses",
Truth != "Xanthophyceae",
# Pred_Class != "Low_SPC",
Pred_Class != "Xanthophyceae",
Pred_Class != "Water",
Pred_Class != "SunGlint",
!Flight == "Handfisher_1_old",
!Flight == "Handfisher_2_old",
!Flight == "Handfisher_2") %>%
dplyr::select(-NDVI) %>%
group_by(Truth) %>%
reframe(validation_pixels = n()) %>%
rename(True = "Truth")
i = 16.5 # width of the side borders in the word_document output (in centimeters)
w = i*0.3937 # width of the side borders in the word_document output (in inches)
df_flx2<-df_training %>%
left_join(df_validation, by = "True") %>%
rename(`Validation Pixels` = "validation_pixels",
Class = "True",
`Training Pixels` = "Training_Pixels") %>%
mutate(`Validation Pixels` = case_when(Class == "Water" ~ `Validation Pixels`*4,
T ~ `Validation Pixels`),
`Validation Pixels` = case_when(Class == "Sediment" ~ round(`Validation Pixels`/4,0),
T ~ `Validation Pixels`))
df_flx2
df_flx2<-df_training %>%
left_join(df_validation, by = "True") %>%
rename(`Validation Pixels` = "validation_pixels",
`Taxonomic Class` = "True",
`Training Pixels` = "Training_Pixels") %>%
mutate(`Validation Pixels` = case_when(Class == "Water" ~ `Validation Pixels`*4,
T ~ `Validation Pixels`),
`Validation Pixels` = case_when(Class == "Sediment" ~ round(`Validation Pixels`/4,0),
T ~ `Validation Pixels`),
Name = case_when( `Taxonomic Class` == "Bacillariophyceae" ~ "Diatoms",
`Taxonomic Class` == "Chlorophyceae" ~ "Green algae",
`Taxonomic Class` == "Magnoliopsida" ~ "Seagrass",
`Taxonomic Class` == "Phaeophyceae" ~ "Brown algae",
`Taxonomic Class` == "Rhodophyceae" ~ "Red algae")
)
df_flx2<-df_training %>%
left_join(df_validation, by = "True") %>%
rename(`Validation Pixels` = "validation_pixels",
`Taxonomic Class` = "True",
`Training Pixels` = "Training_Pixels") %>%
mutate(`Validation Pixels` = case_when(`Taxonomic Class` == "Water" ~ `Validation Pixels`*4,
T ~ `Validation Pixels`),
`Validation Pixels` = case_when(`Taxonomic Class` == "Sediment" ~ round(`Validation Pixels`/4,0),
T ~ `Validation Pixels`),
Name = case_when( `Taxonomic Class` == "Bacillariophyceae" ~ "Diatoms",
`Taxonomic Class` == "Chlorophyceae" ~ "Green algae",
`Taxonomic Class` == "Magnoliopsida" ~ "Seagrass",
`Taxonomic Class` == "Phaeophyceae" ~ "Brown algae",
`Taxonomic Class` == "Rhodophyceae" ~ "Red algae")
)
df_flx2
df_flx2<-df_training %>%
left_join(df_validation, by = "True") %>%
rename(`Validation Pixels` = "validation_pixels",
`Taxonomic Class` = "True",
`Training Pixels` = "Training_Pixels") %>%
mutate(`Validation Pixels` = case_when(`Taxonomic Class` == "Water" ~ `Validation Pixels`*4,
T ~ `Validation Pixels`),
`Validation Pixels` = case_when(`Taxonomic Class` == "Sediment" ~ round(`Validation Pixels`/4,0),
T ~ `Validation Pixels`),
Name = case_when( `Taxonomic Class` == "Bacillariophyceae" ~ "Diatoms",
`Taxonomic Class` == "Chlorophyceae" ~ "Green algae",
`Taxonomic Class` == "Magnoliopsida" ~ "Seagrass",
`Taxonomic Class` == "Phaeophyceae" ~ "Brown algae",
`Taxonomic Class` == "Rhodophyceae" ~ "Red algae")
) %>%
dplyr::select(Name,`Taxonomic class`,`Training Pixels`,`Validation Pixels`)
df_flx2<-df_training %>%
left_join(df_validation, by = "True") %>%
rename(`Validation Pixels` = "validation_pixels",
`Taxonomic Class` = "True",
`Training Pixels` = "Training_Pixels") %>%
mutate(`Validation Pixels` = case_when(`Taxonomic Class` == "Water" ~ `Validation Pixels`*4,
T ~ `Validation Pixels`),
`Validation Pixels` = case_when(`Taxonomic Class` == "Sediment" ~ round(`Validation Pixels`/4,0),
T ~ `Validation Pixels`),
Name = case_when( `Taxonomic Class` == "Bacillariophyceae" ~ "Diatoms",
`Taxonomic Class` == "Chlorophyceae" ~ "Green algae",
`Taxonomic Class` == "Magnoliopsida" ~ "Seagrass",
`Taxonomic Class` == "Phaeophyceae" ~ "Brown algae",
`Taxonomic Class` == "Rhodophyceae" ~ "Red algae")
) %>%
dplyr::select(Name,`Taxonomic Class`,`Training Pixels`,`Validation Pixels`)
df_flx2
df_flx2<-df_training %>%
left_join(df_validation, by = "True") %>%
rename(`Validation Pixels` = "validation_pixels",
`Taxonomic Class` = "True",
`Training Pixels` = "Training_Pixels") %>%
mutate(`Validation Pixels` = case_when(`Taxonomic Class` == "Water" ~ `Validation Pixels`*4,
T ~ `Validation Pixels`),
`Validation Pixels` = case_when(`Taxonomic Class` == "Sediment" ~ round(`Validation Pixels`/4,0),
T ~ `Validation Pixels`),
Name = case_when( `Taxonomic Class` == "Bacillariophyceae" ~ "Diatoms",
`Taxonomic Class` == "Chlorophyceae" ~ "Green algae",
`Taxonomic Class` == "Magnoliopsida" ~ "Seagrass",
`Taxonomic Class` == "Phaeophyceae" ~ "Brown algae",
`Taxonomic Class` == "Rhodophyceae" ~ "Red algae",
`Taxonomic Class` == "Water" ~ "Water",
`Taxonomic Class` == "Sediment ~ Sediment"),
`Taxonomic Class` = case_when(`Taxonomic Class` == "Water" ~ "-"
`Taxonomic Class` == "Sediment" ~ "-",
df_flx2<-df_training %>%
left_join(df_validation, by = "True") %>%
rename(`Validation Pixels` = "validation_pixels",
`Taxonomic Class` = "True",
`Training Pixels` = "Training_Pixels") %>%
mutate(`Validation Pixels` = case_when(`Taxonomic Class` == "Water" ~ `Validation Pixels`*4,
T ~ `Validation Pixels`),
`Validation Pixels` = case_when(`Taxonomic Class` == "Sediment" ~ round(`Validation Pixels`/4,0),
T ~ `Validation Pixels`),
Name = case_when( `Taxonomic Class` == "Bacillariophyceae" ~ "Diatoms",
`Taxonomic Class` == "Chlorophyceae" ~ "Green algae",
`Taxonomic Class` == "Magnoliopsida" ~ "Seagrass",
`Taxonomic Class` == "Phaeophyceae" ~ "Brown algae",
`Taxonomic Class` == "Rhodophyceae" ~ "Red algae",
`Taxonomic Class` == "Water" ~ "Water",
`Taxonomic Class` == "Sediment ~ Sediment"),
`Taxonomic Class` = case_when(`Taxonomic Class` == "Water" ~ "-",
`Taxonomic Class` == "Sediment" ~ "-",
T ~ `Taxonomic Class`)
) %>%
dplyr::select(Name,`Taxonomic Class`,`Training Pixels`,`Validation Pixels`)
`Taxonomic Class` == "Sediment" ~ Sediment"),
df_flx2<-df_training %>%
left_join(df_validation, by = "True") %>%
rename(`Validation Pixels` = "validation_pixels",
`Taxonomic Class` = "True",
`Training Pixels` = "Training_Pixels") %>%
mutate(`Validation Pixels` = case_when(`Taxonomic Class` == "Water" ~ `Validation Pixels`*4,
T ~ `Validation Pixels`),
`Validation Pixels` = case_when(`Taxonomic Class` == "Sediment" ~ round(`Validation Pixels`/4,0),
T ~ `Validation Pixels`),
Name = case_when( `Taxonomic Class` == "Bacillariophyceae" ~ "Diatoms",
`Taxonomic Class` == "Chlorophyceae" ~ "Green algae",
`Taxonomic Class` == "Magnoliopsida" ~ "Seagrass",
`Taxonomic Class` == "Phaeophyceae" ~ "Brown algae",
`Taxonomic Class` == "Rhodophyceae" ~ "Red algae",
`Taxonomic Class` == "Water" ~ "Water",
`Taxonomic Class` == "Sediment" ~ "Sediment"),
`Taxonomic Class` = case_when(`Taxonomic Class` == "Water" ~ "-",
`Taxonomic Class` == "Sediment" ~ "-",
T ~ `Taxonomic Class`)
) %>%
dplyr::select(Name,`Taxonomic Class`,`Training Pixels`,`Validation Pixels`)
df_flx2
flx2 <- df_flx2 %>%
flextable() %>%
flextable::width(width = (w/(ncol(df_flx2)))) %>%
# border_remove() %>%
flextable::align(align = "center",part = "all") %>%
flextable::align(align = "center",part = "header") %>%
set_table_properties(layout = "autofit")
flx2
df_flx2<-df_training %>%
left_join(df_validation, by = "True") %>%
rename(`Validation Pixels` = "validation_pixels",
`Taxonomic Class` = "True",
`Training Pixels` = "Training_Pixels") %>%
mutate(`Validation Pixels` = case_when(`Taxonomic Class` == "Water" ~ `Validation Pixels`*4,
T ~ `Validation Pixels`),
`Validation Pixels` = case_when(`Taxonomic Class` == "Sediment" ~ round(`Validation Pixels`/4,0),
T ~ `Validation Pixels`),
Name = case_when( `Taxonomic Class` == "Bacillariophyceae" ~ "Diatoms",
`Taxonomic Class` == "Chlorophyceae" ~ "Green macroalgae",
`Taxonomic Class` == "Magnoliopsida" ~ "Seagrass",
`Taxonomic Class` == "Phaeophyceae" ~ "Brown macroalgae",
`Taxonomic Class` == "Rhodophyceae" ~ "Red macroalgae",
`Taxonomic Class` == "Water" ~ "Water",
`Taxonomic Class` == "Sediment" ~ "Sediment"),
`Taxonomic Class` = case_when(`Taxonomic Class` == "Water" ~ "-",
`Taxonomic Class` == "Sediment" ~ "-",
T ~ `Taxonomic Class`)
) %>%
dplyr::select(Name,`Taxonomic Class`,`Training Pixels`,`Validation Pixels`)
flx2 <- df_flx2 %>%
flextable() %>%
flextable::width(width = (w/(ncol(df_flx2)))) %>%
# border_remove() %>%
flextable::align(align = "center",part = "all") %>%
flextable::align(align = "center",part = "header") %>%
set_table_properties(layout = "autofit")
save_as_image(flx2, "Figures/High_res/table_validation_px.png", res = 300)
df_validation<-"Output/Validation_data" %>%
list.files("ResultsNewNN_NoXanthowithNDVIWithOldandBoat.csv",recursive = T, full.names = T) %>%
read.csv() %>%
as_tibble() %>%
rename(Truth_ID = "Truth") %>%
mutate(Truth =  case_when(Truth_ID == 1 ~ "Sediment",
Truth_ID == 2 ~ "Chlorophyceae",
Truth_ID == 3 ~ "Sediment",
Truth_ID == 4 ~ "Magnoliopsida",
Truth_ID == 5 ~ "Bacillariophyceae",
Truth_ID == 6 ~ "Magnoliopsida",
Truth_ID == 7 ~ "Phaeophyceae",
Truth_ID == 8 ~ "Rhodophyceae",
Truth_ID == 9 ~ "SunGlint",
Truth_ID == 10 ~ "Water",
Truth_ID == 11 ~ "Xanthophyceae",
Truth_ID == 12 ~ "Spartina",
Truth_ID == 41 ~ "Bleached seagrasses",
TRUE ~ "NA"),
Pred_Class = case_when(Pred_Class == "Clorophyta" ~ "Chlorophyta",
Pred_Class == "Rhodphyta" ~ "Rhodphyta",
Pred_Class == "Deep_Sediment" ~ "Sediment",
Pred_Class == "MPB" ~ "Sediment",
(Pred_Class == "Low_SPC" & NDVI > 0.2) ~ "Magnoliosida",
(Pred_Class == "Low_SPC" & NDVI <= 0.2 )~ "Sediment",
TRUE ~ Pred_Class)) %>%
dplyr::filter(
# Truth != "Water",
Truth  != "Spartina",
Truth != "SunGlint",
Truth != "Bleached seagrasses",
Truth != "Xanthophyceae",
# Pred_Class != "Low_SPC",
Pred_Class != "Xanthophyceae",
Pred_Class != "Water",
Pred_Class != "SunGlint",
!Flight == "Handfisher_1_old",
!Flight == "Handfisher_2_old",
!Flight == "Handfisher_2") %>%
dplyr::select(-NDVI) %>%
group_by(Truth) %>%
reframe(validation_pixels = n()) %>%
rename(True = "Truth")
#| cache: false
#| echo: false
#| warning: false
#| eval: true
library(flextable)
library(tidyverse)
library(tidyterra)
# library(tidymodels)
library(Utilities.Package)
library(patchwork)
library(sf)
library(rnaturalearth)
library(rnaturalearthdata)
library(ggforce)
library(patchwork)
library(terra)
library(gt)
library(scales)
library(magick)
library(grid)
library(ggforce)
library(statebins)
library(ggridges)
library(ggspatial)
library(terrainr)
# library(ggpmisc)
library(broom)
library(stars)
library(gmodels)
library(caret)
library(rstudioapi)
library(terra)
library(MapRs)
options(scipen = 100000000)
# terraOptions(cores = 12)
df_training<-read.csv("Data/training/TrainandValid_NewStanRawMetrics_Processed.csv")
df_validation<-"Output/Validation_data" %>%
list.files("ResultsNewNN_NoXanthowithNDVIWithOldandBoat.csv",recursive = T, full.names = T) %>%
read.csv() %>%
as_tibble() %>%
rename(Truth_ID = "Truth") %>%
mutate(Truth =  case_when(Truth_ID == 1 ~ "Sediment",
Truth_ID == 2 ~ "Chlorophyceae",
Truth_ID == 3 ~ "Sediment",
Truth_ID == 4 ~ "Magnoliopsida",
Truth_ID == 5 ~ "Bacillariophyceae",
Truth_ID == 6 ~ "Magnoliopsida",
Truth_ID == 7 ~ "Phaeophyceae",
Truth_ID == 8 ~ "Rhodophyceae",
Truth_ID == 9 ~ "SunGlint",
Truth_ID == 10 ~ "Water",
Truth_ID == 11 ~ "Xanthophyceae",
Truth_ID == 12 ~ "Spartina",
Truth_ID == 41 ~ "Bleached seagrasses",
TRUE ~ "NA"),
Pred_Class = case_when(Pred_Class == "Clorophyta" ~ "Chlorophyta",
Pred_Class == "Rhodphyta" ~ "Rhodphyta",
Pred_Class == "Deep_Sediment" ~ "Sediment",
Pred_Class == "MPB" ~ "Sediment",
(Pred_Class == "Low_SPC" & NDVI > 0.2) ~ "Magnoliosida",
(Pred_Class == "Low_SPC" & NDVI <= 0.2 )~ "Sediment",
TRUE ~ Pred_Class)) %>%
dplyr::filter(
# Truth != "Water",
Truth  != "Spartina",
Truth != "SunGlint",
Truth != "Bleached seagrasses",
Truth != "Xanthophyceae",
# Pred_Class != "Low_SPC",
Pred_Class != "Xanthophyceae",
Pred_Class != "Water",
Pred_Class != "SunGlint",
!Flight == "Handfisher_1_old",
!Flight == "Handfisher_2_old",
!Flight == "Handfisher_2") %>%
dplyr::select(-NDVI) %>%
group_by(Truth) %>%
reframe(validation_pixels = n()) %>%
rename(True = "Truth")
i = 16.5 # width of the side borders in the word_document output (in centimeters)
w = i*0.3937 # width of the side borders in the word_document output (in inches)
df_flx2<-df_training %>%
left_join(df_validation, by = "True") %>%
rename(`Validation Pixels` = "validation_pixels",
`Taxonomic Class` = "True",
`Training Pixels` = "Training_Pixels") %>%
mutate(`Validation Pixels` = case_when(`Taxonomic Class` == "Water" ~ `Validation Pixels`*4,
T ~ `Validation Pixels`),
`Validation Pixels` = case_when(`Taxonomic Class` == "Sediment" ~ round(`Validation Pixels`/4,0),
T ~ `Validation Pixels`),
Name = case_when( `Taxonomic Class` == "Bacillariophyceae" ~ "Benthic diatoms",
`Taxonomic Class` == "Chlorophyceae" ~ "Green macroalgae",
`Taxonomic Class` == "Magnoliopsida" ~ "Seagrass",
`Taxonomic Class` == "Phaeophyceae" ~ "Brown macroalgae",
`Taxonomic Class` == "Rhodophyceae" ~ "Red macroalgae",
`Taxonomic Class` == "Water" ~ "Water",
`Taxonomic Class` == "Sediment" ~ "Sediment"),
`Taxonomic Class` = case_when(`Taxonomic Class` == "Water" ~ "-",
`Taxonomic Class` == "Sediment" ~ "-",
T ~ `Taxonomic Class`)
) %>%
dplyr::select(Name,`Taxonomic Class`,`Training Pixels`,`Validation Pixels`)
flx2 <- df_flx2 %>%
flextable() %>%
flextable::width(width = (w/(ncol(df_flx2)))) %>%
# border_remove() %>%
flextable::align(align = "center",part = "all") %>%
flextable::align(align = "center",part = "header") %>%
set_table_properties(layout = "autofit")
flx2
flx2
save_as_image(flx2, "Figures/High_res/table_validation_px.png", res = 300)
