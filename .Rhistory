"Rhodophyceae"),
chlb=c(1,1,0,0,0),
chlc=c(0,0,1,1,0),
fuco=c(0,0,1,1,0),
zea=c(1,1,0,1,0),
diad=c(0,0,1,0,0),
lutein=c(1,1,0,0,0),
Neox=c(1,1,0,0,0),
PE=c(0,0,0,0,1),
PC=c(0,0,0,0,1))%>%
select(-Classes) %>%
as.matrix() %>%
as.array() %>%
rast()
ext(df_pigment)<-c(0,9,0,5)
y_axis_text_pigment<-data.frame(x = rep(-0.05,5),
y = c(0.5,1.5,2.5,3.5,4.5),
lab = c("Rhodophyceae",
"Phaeophyceae",
"Bacillariophy.",
"Chlorophyceae",
"Magnoliopsida")
)
x_axis_text_pigment<-data.frame(y = rep(5.5,9),
x = c(0.5,1.5,2.5,3.5,4.5,5.5,6.5,7.5,8.5),
lab = c("Chl-b","Chl-c","Fuco","Zea","Diad","Lut","Neo","PE","PC")
)
min_x_line = -1.5
max_y_line = 6
line_grid<-data.frame(xmin=NA,
xmax=NA,
ymin=NA,
ymax=NA,
group=NA)
for(i in 0:max_y_line){
line_grid[i+1,1]=min_x_line
line_grid[i+1,2]=9
line_grid[i+1,3]=i
line_grid[i+1,4]=i
line_grid[i+1,5]=i+1
}
nrowgrid=nrow(line_grid)
for(i in 0:9){
line_grid[i+1+nrowgrid,1]=i
line_grid[i+1+nrowgrid,2]=i
line_grid[i+1+nrowgrid,3]=0
line_grid[i+1+nrowgrid,4]=max_y_line
line_grid[i+1+nrowgrid,5]=i+1+nrowgrid
}
line_grid[nrow(line_grid)+1,1] = min_x_line
line_grid[nrow(line_grid),2] = min_x_line
line_grid[nrow(line_grid),3] = 0
line_grid[nrow(line_grid),4] = max_y_line
line_grid[nrow(line_grid),5] = nrow(line_grid)
line_grid<- line_grid %>%
rbind(c(-1.5,9,-0.6,-0.6,19))%>%
rbind(c(-1.5,-1.5,-0.6,0,20))%>%
rbind(c(0,0,-0.6,0,21))%>%
rbind(c(1,1,-0.6,0,22))%>%
rbind(c(2,2,-0.6,0,23))%>%
rbind(c(3,3,-0.6,0,24))%>%
rbind(c(4,4,-0.6,0,25))%>%
rbind(c(5,5,-0.6,0,26))%>%
rbind(c(6,6,-0.6,0,27))%>%
rbind(c(7,7,-0.6,0,28))%>%
rbind(c(8,8,-0.6,0,29))%>%
rbind(c(9,9,-0.6,0,30))
Absorption_wv<- data.frame(x = c(0.5,1.5,2.5,3.5,4.5,5.5,6.5,7.5,8.5),
y = rep(-0.3,9),
lab = c("650","636","550","489","496","490","450","566","615"))
rast_pigment<-ggplot()+
geom_spatraster(data = (df_pigment),
# show.legend = F,
na.rm = TRUE
)+
coord_fixed(ratio = 0.7)+
scale_fill_gradientn(
# colours = c("black","firebrick4","goldenrod","yellow","chartreuse3"),
# colours = c("khaki1","goldenrod","firebrick3","chartreuse4"),
colours = c("firebrick4","orange","#007d00"),
# colours = c("#7d0000","#00b300","#00b300","#00b300","#007d00"),
na.value = "white",
labels = c("Absence","no se","Presence"),
breaks = c(0,0.5,1))+
geom_text(
data = y_axis_text_pigment,
aes(x = x, y = y, label = lab),
# fill = "#ffffff99",
hjust = 1,
size = 6,
# angle = 20
)+
geom_text(
data = data.frame(x = -0.05, y = -0.3, lab = "Absorption (nm)"),
aes(x = x, y = y, label = lab),
# fill = "#ffffff99",
hjust = 1,
size = 5,
# angle = 20
)+
geom_text(
data = Absorption_wv,
aes(x = x, y = y, label = lab),
# fill = "#ffffff99",
hjust = 0.5,
size = 6,
# angle = 20
)+
geom_text(
data = x_axis_text_pigment,
aes(x = x, y = y, label = lab),
# fill = "#ffffff99",
hjust = 0.5,
size = 7,
# angle = 20
)+
geom_segment(data = line_grid,
aes(x = xmin, xend = xmax, y = ymin, yend = ymax, group = group),
linewidth = 1)+
xlim(c(-2,9))+
ylim(c(-1,6.1))+
theme_Bede()+
theme(
# axis.title.x = element_text(size = 35),
# axis.title.y = element_text(size = 35),
axis.title.y = element_blank(),
axis.title.x = element_blank(),
# axis.text.x = element_text(size = 30),
axis.text.x = element_blank(),
# axis.text.y = element_text(size = 25),
axis.text.y = element_blank(),
axis.ticks.x = element_blank(),
axis.ticks.y = element_blank(),
panel.border = element_blank(),
axis.line=element_blank(),
# legend.position = "top",
legend.position = "none",
legend.direction="horizontal",
legend.key.width = unit(2,"cm"),
legend.text = element_text(size = 20),
legend.title = element_text(size = 20, vjust = 2),
legend.title.align = 0.5,
legend.justification = "center")
# rast_pigment
ggsave("./Figures/Disc_Pigment_Table.png",rast_pigment, width= 1066*4, height=516*4, units = "px")
ggsave("./Figures/High_res/Disc_Pigment_Table.png",rast_pigment, width= 1066*4, height=516*4, units = "px")
#| cache: false
#| echo: false
#| eval: false
#| warning: false
df_validation<-read.csv("Data/training/TrainandValid_NewStanRawMetrics_Processed_valid.csv")
i = 16.5 # width of the side borders in the word_document output (in centimeters)
w = i*0.3937 # width of the side borders in the word_document output (in inches)
df_flx2<-df_training %>%
left_join(df_validation, by = "True") %>%
rename(`Validation Pixels` = "n",
Class = "True",
`Training Pixels` = "Training_Pixels")
#| echo: false
#| warning: false
#| cache: true
#| eval: false
df_validation<-"Data/accuracy_assesment_low&high_flights.csv" %>%
read_delim(delim = ",", escape_double = FALSE, trim_ws = TRUE) %>%
dplyr::filter(True != "Sediment",
True != "Sun Glint",
True != "Water",
True != "Xanthophyceae") %>%
mutate(True = case_when(True == "Green Algae" ~ "Chlorophyceae",
True == "Microphytobenthos" ~ "Bacillariophyceae",
True == "Rodophyceae" ~ "Rhodophyceae",
True == "Pheophyceae" ~ "Phaeophyceae",
TRUE ~ True)) %>%
group_by(True) %>%
summarise(n = n())
#| cache: true
#| echo: false
#| warning: false
#| eval: true
df_training<-read.csv("Data/training/TrainandValid_NewStanRawMetrics_Processed.csv")
#| cache: false
#| echo: false
#| eval: false
#| warning: false
df_validation<-read.csv("Data/training/TrainandValid_NewStanRawMetrics_Processed_valid.csv")
i = 16.5 # width of the side borders in the word_document output (in centimeters)
w = i*0.3937 # width of the side borders in the word_document output (in inches)
df_flx2<-df_training %>%
left_join(df_validation, by = "True") %>%
rename(`Validation Pixels` = "n",
Class = "True",
`Training Pixels` = "Training_Pixels")
flx2 <- df_flx2 %>%
flextable() %>%
flextable::width(width = (w/(ncol(df_flx2)))) %>%
# border_remove() %>%
flextable::align(align = "center",part = "all") %>%
flextable::align(align = "center",part = "header") %>%
set_table_properties(layout = "autofit")
save_as_image(flx2, "Figures/High_res/table_validation_px.png", res = 300)
4969976-955589
4969976-4955589
14387/.84291
14387/384291
*100
143/384291
0.0003721138*100
df<-data.frame(
Country = c(
rep("France",5),
rep("Portugal",4)
),
Site = c(
rep("Gulf of Morbihan",3),
rep("Bourgneuf Bay",2),
rep("Aveiro Lagoon",4)
),
Name = c(
"Arz Island",
"Duer",
"Duer",
"Barbâtre",
"L'Epine",
"Marinha Lanzarote",
"Mataducos",
"Gafanha",
"Gafanha"
),
Altitude = c(
"12m",
"12m",
"120m",
"120m",
"120m",
"120m",
"120m",
"120m",
"12m"
),
Utility = c(
"Training",
"Training",
"Validation",
"Validation",
"Validation",
"Validation",
"Validation",
"Validation",
"Training"
),
Date = c(
"29/09/2022",
"14/07/2022",
"14/07/2022",
"07/09/2021",
"08/07/2021",
"17/06/2022",
"16/06/2022",
"15/06/2022",
"15/06/2022"
)
)
brdr1 <- fp_border_default(color = "black", width = 1.5)
brdr2 <- fp_border_default(color = "grey", width = 1.5)
brdr3 <- fp_border_default(color = "grey40", width = 1.5)
i = 16.5 # width of the side borders in the word_document output (in centimeters)
w = i*0.3937 # width of the side borders in the word_document output (in inches)
flx1<-flextable(df)  %>%
flextable::width(width = (w/(ncol(df)))) %>%
merge_v(j = 1) %>%
merge_v(j = 2) %>%
border_remove() %>%
hline_top(border=brdr1) %>%
hline(i=5, border=brdr1) %>%
hline(i=1,j = 3:5, border=brdr2) %>%
hline(i=2, border=brdr2) %>%
hline(i=3, j = 2:5, border=brdr3) %>%
hline(i=4, j = 3:5, border=brdr2) %>%
hline(i=6, border=brdr2) %>%
hline(i=6, j = 1:2, border=brdr1) %>%
hline(i=7, border=brdr2) %>%
hline(i=8, border=brdr2) %>%
hline(i=9, border=brdr1) %>%
vline(j=2, border = brdr1) %>%
flextable::align(align = "center",part = "all") %>%
flextable::align(align = "center",part = "header") %>%
# set_caption(caption = "Table 1 List of drone Flight, summarising the date, the altitude and the purpose of each flight.") %>%
set_table_properties(layout = "autofit")
#| cache: false
#| echo: false
#| warning: false
#| eval: true
library(flextable)
library(tidyverse)
library(tidyterra)
library(tidymodels)
library(Utilities.Package)
library(patchwork)
library(sf)
library(rnaturalearth)
library(rnaturalearthdata)
library(rnaturalearthhires)
library(ggforce)
library(patchwork)
library(terra)
library(gt)
library(scales)
library(magick)
library(grid)
library(ggforce)
library(statebins)
library(ggridges)
library(ggspatial)
library(terrainr)
# library(ggpmisc)
library(broom)
library(stars)
library(gmodels)
library(caret)
options(scipen = 100000000)
df<-data.frame(
Country = c(
rep("France",5),
rep("Portugal",4)
),
Site = c(
rep("Gulf of Morbihan",3),
rep("Bourgneuf Bay",2),
rep("Aveiro Lagoon",4)
),
Name = c(
"Arz Island",
"Duer",
"Duer",
"Barbâtre",
"L'Epine",
"Marinha Lanzarote",
"Mataducos",
"Gafanha",
"Gafanha"
),
Altitude = c(
"12m",
"12m",
"120m",
"120m",
"120m",
"120m",
"120m",
"120m",
"12m"
),
Utility = c(
"Training",
"Training",
"Validation",
"Validation",
"Validation",
"Validation",
"Validation",
"Validation",
"Training"
),
Date = c(
"29/09/2022",
"14/07/2022",
"14/07/2022",
"07/09/2021",
"08/07/2021",
"17/06/2022",
"16/06/2022",
"15/06/2022",
"15/06/2022"
)
)
brdr1 <- fp_border_default(color = "black", width = 1.5)
brdr2 <- fp_border_default(color = "grey", width = 1.5)
brdr3 <- fp_border_default(color = "grey40", width = 1.5)
i = 16.5 # width of the side borders in the word_document output (in centimeters)
w = i*0.3937 # width of the side borders in the word_document output (in inches)
flx1<-flextable(df)  %>%
flextable::width(width = (w/(ncol(df)))) %>%
merge_v(j = 1) %>%
merge_v(j = 2) %>%
border_remove() %>%
hline_top(border=brdr1) %>%
hline(i=5, border=brdr1) %>%
hline(i=1,j = 3:5, border=brdr2) %>%
hline(i=2, border=brdr2) %>%
hline(i=3, j = 2:5, border=brdr3) %>%
hline(i=4, j = 3:5, border=brdr2) %>%
hline(i=6, border=brdr2) %>%
hline(i=6, j = 1:2, border=brdr1) %>%
hline(i=7, border=brdr2) %>%
hline(i=8, border=brdr2) %>%
hline(i=9, border=brdr1) %>%
vline(j=2, border = brdr1) %>%
flextable::align(align = "center",part = "all") %>%
flextable::align(align = "center",part = "header") %>%
# set_caption(caption = "Table 1 List of drone Flight, summarising the date, the altitude and the purpose of each flight.") %>%
set_table_properties(layout = "autofit")
flx1
flx1<-flextable(df)  %>%
flextable::width(width = (w/(ncol(df)))) %>%
merge_v(j = 1) %>%
merge_v(j = 2) %>%
border_remove() %>%
hline_top(border=brdr1) %>%
hline(i=5, border=brdr1) %>%
hline(i=1,j = 3:6, border=brdr2) %>%
hline(i=2, border=brdr2) %>%
hline(i=3, j = 2:6, border=brdr3) %>%
hline(i=4, j = 3:6, border=brdr2) %>%
hline(i=6, border=brdr2) %>%
hline(i=6, j = 1:2, border=brdr1) %>%
hline(i=7, border=brdr2) %>%
hline(i=8, border=brdr2) %>%
hline(i=9, border=brdr1) %>%
vline(j=2, border = brdr1) %>%
flextable::align(align = "center",part = "all") %>%
flextable::align(align = "center",part = "header") %>%
# set_caption(caption = "Table 1 List of drone Flight, summarising the date, the altitude and the purpose of each flight.") %>%
set_table_properties(layout = "autofit")
flx1
save_as_image(flx1, "Figures/High_res/Table1/table_flights.png", res = 300)
brdr1 <- fp_border_default(color = "black", width = 1)
#| cache: false
#| echo: false
#| eval: false
#| warning: false
df<-data.frame(
Country = c(
rep("France",5),
rep("Portugal",4)
),
Site = c(
rep("Gulf of Morbihan",3),
rep("Bourgneuf Bay",2),
rep("Aveiro Lagoon",4)
),
Name = c(
"Arz Island",
"Duer",
"Duer",
"Barbâtre",
"L'Epine",
"Marinha Lanzarote",
"Mataducos",
"Gafanha",
"Gafanha"
),
Altitude = c(
"12m",
"12m",
"120m",
"120m",
"120m",
"120m",
"120m",
"120m",
"12m"
),
Utility = c(
"Training",
"Training",
"Validation",
"Validation",
"Validation",
"Validation",
"Validation",
"Validation",
"Training"
),
Date = c(
"29/09/2022",
"14/07/2022",
"14/07/2022",
"07/09/2021",
"08/07/2021",
"17/06/2022",
"16/06/2022",
"15/06/2022",
"15/06/2022"
)
)
brdr1 <- fp_border_default(color = "black", width = 1)
brdr2 <- fp_border_default(color = "grey", width = 1.5)
brdr3 <- fp_border_default(color = "grey40", width = 1.5)
i = 16.5 # width of the side borders in the word_document output (in centimeters)
w = i*0.3937 # width of the side borders in the word_document output (in inches)
flx1<-flextable(df)  %>%
flextable::width(width = (w/(ncol(df)))) %>%
merge_v(j = 1) %>%
merge_v(j = 2) %>%
border_remove() %>%
hline_top(border=brdr1) %>%
hline(i=5, border=brdr1) %>%
hline(i=1,j = 3:6, border=brdr2) %>%
hline(i=2, border=brdr2) %>%
hline(i=3, j = 2:6, border=brdr3) %>%
hline(i=4, j = 3:6, border=brdr2) %>%
hline(i=6, border=brdr2) %>%
hline(i=6, j = 1:2, border=brdr1) %>%
hline(i=7, border=brdr2) %>%
hline(i=8, border=brdr2) %>%
hline(i=9, border=brdr1) %>%
vline(j=2, border = brdr1) %>%
flextable::align(align = "center",part = "all") %>%
flextable::align(align = "center",part = "header") %>%
# set_caption(caption = "Table 1 List of drone Flight, summarising the date, the altitude and the purpose of each flight.") %>%
set_table_properties(layout = "autofit")
save_as_image(flx1, "Figures/High_res/Table1/table_flights.png", res = 300)
