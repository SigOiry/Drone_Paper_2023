theme_Bede()+
xlab("Resolution (m)") +
ylab("Agreement")+
theme(axis.title = element_text(size = 20),
axis.text.x = element_text(size = 15),
axis.text.y = element_text(size = 15),
legend.text = element_text(size = 15),
legend.key.size = unit(1, "cm"))
# scale_x_log10()
)
mgcv::betar(link="logit")
Utilities.Package::Model_Check(glm_res)
plot(density(total$prop))
total %>%
ggplot(aes(x = res, y = prop, group = true, color =true_fct))+
geom_line()+
scale_x_log10()
total %>%
ggplot(aes(x = res, y = prop, group = true, color =true_fct))+
geom_line()
total %>%
ggplot(aes(x = res, y = prop, group = true, color =true_fct))+
geom_line()+
theme_Bede_Map()
# glm_res_true <- glm(prop ~ area * true_fct , data = total, familly = mgcv::betar(link="logit"))
glm_res_true <- mgcv::gam(prop ~ res  , data = total, familly = mgcv::betar(link="logit"))
summary(glm_res_true)
Utilities.Package::Model_Check(glm_res)
NewData<-expand_grid(res=unique(total$res),
true_fct=unique(total$true_fct))
pred <- predict(glm_res_true, NewData, se.fit = T, type = "link")
NewData <- NewData %>%
mutate(fit = pred$fit*100,
se = pred$se.fit*100)
cols_fill <- c("1" = "#DAA520",
"2" = "#b3ff1a",
"3" = "#389318",
"4" = "#873e23",
"5" = "#b3002d",
"6" = "#70543e",
"7" = 'grey',
"8" = "#42c9bc")
(plot <- ggplot(NewData)+
geom_ribbon(aes(x = res, y = fit, ymax = fit+se, ymin = fit-se,
color = true_fct, group = true_fct, fill = true_fct
), alpha = 0.2)+
geom_line(aes(x = res, y = fit,
color = true_fct, group = true_fct
))+
# ylim(0,1)+
scale_fill_manual(name = NULL,
values = cols_fill,
labels = c("Green algae", "Seagrass", "Brown algae", "Red algae", "Sediment", "Sunglint","Water")) +
scale_color_manual(name = NULL,
values = cols_fill,
labels = c("Green algae", "Seagrass", "Brown algae", "Red algae", "Sediment", "Sunglint","Water"))+
theme_Bede()+
xlab("Resolution (m)") +
ylab("Agreement")+
theme(axis.title = element_text(size = 20),
axis.text.x = element_text(size = 15),
axis.text.y = element_text(size = 15),
legend.text = element_text(size = 15),
legend.key.size = unit(1, "cm"))
# scale_x_log10()
)
validation
total
# glm_res_true <- glm(prop ~ area * true_fct , data = total, familly = mgcv::betar(link="logit"))
glm_res_true <- mgcv::gam(prop ~ res * true_fct , data = total, familly = mgcv::betar(link="logit"))
summary(glm_res_true)
Utilities.Package::Model_Check(glm_res)
NewData<-expand_grid(res=unique(total$res),
true_fct=unique(total$true_fct))
pred <- predict(glm_res_true, NewData, se.fit = T, type = "link")
NewData <- NewData %>%
mutate(fit = pred$fit*100,
se = pred$se.fit*100)
cols_fill <- c("1" = "#DAA520",
"2" = "#b3ff1a",
"3" = "#389318",
"4" = "#873e23",
"5" = "#b3002d",
"6" = "#70543e",
"7" = 'grey',
"8" = "#42c9bc")
(plot <- ggplot(NewData)+
geom_ribbon(aes(x = res, y = fit, ymax = fit+se, ymin = fit-se,
color = true_fct, group = true_fct, fill = true_fct
), alpha = 0.2)+
geom_line(aes(x = res, y = fit,
color = true_fct, group = true_fct
))+
# ylim(0,1)+
scale_fill_manual(name = NULL,
values = cols_fill,
labels = c("Green algae", "Seagrass", "Brown algae", "Red algae", "Sediment", "Sunglint","Water")) +
scale_color_manual(name = NULL,
values = cols_fill,
labels = c("Green algae", "Seagrass", "Brown algae", "Red algae", "Sediment", "Sunglint","Water"))+
theme_Bede()+
xlab("Resolution (m)") +
ylab("Agreement")+
theme(axis.title = element_text(size = 20),
axis.text.x = element_text(size = 15),
axis.text.y = element_text(size = 15),
legend.text = element_text(size = 15),
legend.key.size = unit(1, "cm"))
# scale_x_log10()
)
total %>%
ggplot(aes(x = res, y = prop, group = true, color =true_fct))+
geom_line()+
theme_Bede_Map()
#| cache: false
#| echo: false
#| warning: false
#| eval: true
library(flextable)
library(tidyverse)
library(tidyterra)
# library(tidymodels)
library(Utilities.Package)
library(patchwork)
library(sf)
library(rnaturalearth)
library(rnaturalearthdata)
library(rnaturalearthhires)
library(ggforce)
library(patchwork)
library(terra)
library(gt)
library(scales)
library(magick)
library(grid)
library(ggforce)
library(statebins)
library(ggridges)
library(ggspatial)
library(terrainr)
# library(ggpmisc)
library(broom)
library(stars)
library(gmodels)
library(caret)
library(rstudioapi)
library(terra)
options(scipen = 100000000)
# terraOptions(cores = 12)
library(MapRs)
df_valid <- list.files("Data/Validation/Prediction_resampling",pattern = ".tif",recursive = T, full.names = T) %>%
as_tibble() %>%
rename(path = "value") %>%
mutate(name = gsub(".*/","",path)) %>%
# dplyr::filter(type == "Pred") %>%
mutate(res =sub(".*_(\\d+)cm.*", "\\1", name) %>% as.numeric()) %>%
arrange(name,res) %>%
mutate(site = case_when(str_detect(name, "Gafanha_high") ~ "Aveiro",
str_detect(name, "Boat1") ~ "Boat1",
str_detect(name, "Boat2") ~ "Boat2",
str_detect(name, "NorthDike") ~ "NorthDike",
str_detect(name, "Duer_high") ~ "Duer",
str_detect(name, "handfisher_Ortho") ~ "handfisher_Ortho",
T ~ NA),
type = "validation")
df_resampled <- list.files("Data/Predictions/Resampled",full.names = T) %>%
as_tibble() %>%
rename(path = "value") %>%
mutate(name = gsub(".*/","",path),
type = case_when(str_detect(name, "_prob.tif") ~ "Prob",
T ~ "Pred")) %>%
dplyr::filter(type == "Pred") %>%
mutate(res =sub(".*_(\\d+)cm_.*", "\\1", name) %>% as.numeric(),
ortho_name  = sub("_(\\d+)cm_.*", "", name)) %>%
arrange(ortho_name,res) %>%
mutate(site = case_when(str_detect(ortho_name, "Aveiro_1506_Highest") ~ "Aveiro",
str_detect(ortho_name, "Aveiro_boat_1706_flight_1") ~ "Boat1",
str_detect(ortho_name, "Aveiro_boat_1706_flight_2") ~ "Boat2",
str_detect(ortho_name, "NoirmoutierNorthDikeSite") ~ "NorthDike",
str_detect(ortho_name, "Duer_15072022_120m") ~ "Duer",
str_detect(ortho_name, "handfisher_Ortho") ~ "handfisher_Ortho",
str_detect(ortho_name, "Horse_rooster") ~ "Horse_rooster",
str_detect(ortho_name, "fl1_120m_handfisher_old") ~ "fl1_120m_handfisher_old",
str_detect(ortho_name, "fl2_120m_handfisher_old") ~ "fl2_120m_handfisher_old",
T ~ NA)) %>%
dplyr::filter(!site == "handfisher_Ortho",
!site == "Duer") %>%
dplyr::select(-ortho_name)
df <- df_valid %>%
bind_rows(df_resampled) %>%
dplyr::filter(site %in% c("Aveiro","Boat1","Boat2","NorthDike")) %>%
# dplyr::filter(site == "Aveiro") %>%
dplyr::select(-name) %>%
pivot_wider(names_from = type, values_from = path)
file.exists("Data/Resampled_saved_data.csv")
if(file.exists("Data/Resampled_saved_data.csv")){
validation <- read.csv( "Data/Resampled_saved_data.csv")
}else{
for(i in 1:nrow(df)){
print(i)
img <- rast(c(df$validation[i],df$Pred[i]))
names(img) <- c("true","pred")
df_img <- img %>%
as.data.frame() %>%
dplyr::filter(!true == 0,
!pred == 0) %>%
dplyr::mutate(res = df$res[i],
site = df$site[i])
if(i == 1){
df_compare <- df_img
}else{
df_compare <- rbind(df_compare,df_img)
}
}
validation = df_compare %>%
mutate(same = case_when(pred == true ~ T,
T ~ F))
write.csv(validation, "Data/Resampled_saved_data.csv", row.names = F)
}
total <- validation %>%
lazy_dt() %>%
group_by(res,true) %>%
dplyr::summarise(agreed = sum(same, na.rm = T),
n_obs = n()) %>%
# ungroup() %>%
mutate(prop = agreed/n_obs) %>%
as_tibble() %>%
dplyr::filter(true != 1,
true != 6,
true != 7,
true != 8) %>%
mutate(true_fct = as.factor(true),
area = res*res)
total <- validation %>%
dtplyr::lazy_dt() %>%
group_by(res,true) %>%
dplyr::summarise(agreed = sum(same, na.rm = T),
n_obs = n()) %>%
# ungroup() %>%
mutate(prop = agreed/n_obs) %>%
as_tibble() %>%
dplyr::filter(true != 1,
true != 6,
true != 7,
true != 8) %>%
mutate(true_fct = as.factor(true),
area = res*res)
write.csv(total, "Data/Resampled_saved_data_total.csv", row.names = F)
if(file.exists("Data/Resampled_saved_data_total.csv")){
total <- read.csv( "Data/Resampled_saved_data_total.csv")
}else{
for(i in 1:nrow(df)){
print(i)
img <- rast(c(df$validation[i],df$Pred[i]))
names(img) <- c("true","pred")
df_img <- img %>%
as.data.frame() %>%
dplyr::filter(!true == 0,
!pred == 0) %>%
dplyr::mutate(res = df$res[i],
site = df$site[i])
if(i == 1){
df_compare <- df_img
}else{
df_compare <- rbind(df_compare,df_img)
}
}
validation = df_compare %>%
mutate(same = case_when(pred == true ~ T,
T ~ F))
total <- validation %>%
dtplyr::lazy_dt() %>%
group_by(res,true) %>%
dplyr::summarise(agreed = sum(same, na.rm = T),
n_obs = n()) %>%
# ungroup() %>%
mutate(prop = agreed/n_obs) %>%
as_tibble() %>%
dplyr::filter(true != 1,
true != 6,
true != 7,
true != 8) %>%
mutate(true_fct = as.factor(true),
area = res*res)
write.csv(total, "Data/Resampled_saved_data_total.csv", row.names = F)
}
total %>%
ggplot(aes(x = res, y = prop, group = true, color =true_fct))+
geom_line()+
theme_Bede_Map()
# glm_res_true <- glm(prop ~ area * true_fct , data = total, familly = mgcv::betar(link="logit"))
glm_res_true <- mgcv::gam(prop ~ res * true_fct , data = total, familly = mgcv::betar(link="logit"))
summary(glm_res_true)
Utilities.Package::Model_Check(glm_res)
Utilities.Package::Model_Check(glm_res_true)
NewData<-expand_grid(res=unique(total$res),
true_fct=unique(total$true_fct))
pred <- predict(glm_res_true, NewData, se.fit = T, type = "link")
NewData <- NewData %>%
mutate(fit = pred$fit*100,
se = pred$se.fit*100)
cols_fill <- c("1" = "#DAA520",
"2" = "#b3ff1a",
"3" = "#389318",
"4" = "#873e23",
"5" = "#b3002d",
"6" = "#70543e",
"7" = 'grey',
"8" = "#42c9bc")
(plot <- ggplot(NewData)+
geom_ribbon(aes(x = res, y = fit, ymax = fit+se, ymin = fit-se,
color = true_fct, group = true_fct, fill = true_fct
), alpha = 0.2)+
geom_line(aes(x = res, y = fit,
color = true_fct, group = true_fct
))+
# ylim(0,1)+
scale_fill_manual(name = NULL,
values = cols_fill,
labels = c("Green algae", "Seagrass", "Brown algae", "Red algae", "Sediment", "Sunglint","Water")) +
scale_color_manual(name = NULL,
values = cols_fill,
labels = c("Green algae", "Seagrass", "Brown algae", "Red algae", "Sediment", "Sunglint","Water"))+
theme_Bede()+
xlab("Resolution (m)") +
ylab("Agreement")+
theme(axis.title = element_text(size = 20),
axis.text.x = element_text(size = 15),
axis.text.y = element_text(size = 15),
legend.text = element_text(size = 15),
legend.key.size = unit(1, "cm"))
# scale_x_log10()
)
ggplot(NewData)+
geom_ribbon(aes(x = res, y = fit, ymax = fit+se, ymin = fit-se,
color = true_fct, group = true_fct, fill = true_fct
), alpha = 0.2)+
geom_line(aes(x = res, y = fit,
color = true_fct, group = true_fct
))+
# ylim(0,1)+
scale_fill_manual(name = NULL,
values = cols_fill,
labels = c("Green algae", "Seagrass", "Brown algae", "Red algae", "Sediment", "Sunglint","Water")) +
scale_color_manual(name = NULL,
values = cols_fill,
labels = c("Green algae", "Seagrass", "Brown algae", "Red algae", "Sediment", "Sunglint","Water"))+
theme_Bede()+
xlab("Resolution (m)") +
ylab("Agreement")+
theme(axis.title = element_text(size = 20),
axis.text.x = element_text(size = 15),
axis.text.y = element_text(size = 15),
legend.text = element_text(size = 15),
legend.key.size = unit(1, "cm")
)
ggplot(NewData)+
geom_ribbon(aes(x = res, y = fit, ymax = fit+se, ymin = fit-se,
color = true_fct, group = true_fct, fill = true_fct
), alpha = 0.2)+
geom_line(aes(x = res, y = fit,
color = true_fct, group = true_fct
))
ggplot(NewData)+
geom_ribbon(aes(x = res, y = fit, ymax = fit+se, ymin = fit-se,
color = true_fct, group = true_fct, fill = true_fct
), alpha = 0.2)+
geom_line(aes(x = res, y = fit,
color = true_fct, group = true_fct
))+
# ylim(0,1)+
scale_fill_manual(name = NULL,
values = cols_fill,
labels = c("Green algae", "Seagrass", "Brown algae", "Red algae", "Sediment", "Sunglint","Water")) +
scale_color_manual(name = NULL,
values = cols_fill,
labels = c("Green algae", "Seagrass", "Brown algae", "Red algae", "Sediment", "Sunglint","Water"))+
theme_Bede()
NewData
NewData <- NewData %>%
mutate(fit = pred$fit*100,
se = pred$se.fit*100,
true_fct=as.factor(true_fct))
cols_fill <- c("1" = "#DAA520",
"2" = "#b3ff1a",
"3" = "#389318",
"4" = "#873e23",
"5" = "#b3002d",
"6" = "#70543e",
"7" = 'grey',
"8" = "#42c9bc")
(plot <- ggplot(NewData)+
geom_ribbon(aes(x = res, y = fit, ymax = fit+se, ymin = fit-se,
color = true_fct, group = true_fct, fill = true_fct
), alpha = 0.2)+
geom_line(aes(x = res, y = fit,
color = true_fct, group = true_fct
))+
# ylim(0,1)+
scale_fill_manual(name = NULL,
values = cols_fill,
labels = c("Green algae", "Seagrass", "Brown algae", "Red algae", "Sediment", "Sunglint","Water")) +
scale_color_manual(name = NULL,
values = cols_fill,
labels = c("Green algae", "Seagrass", "Brown algae", "Red algae", "Sediment", "Sunglint","Water"))+
theme_Bede()+
xlab("Resolution (m)") +
ylab("Agreement")+
theme(axis.title = element_text(size = 20),
axis.text.x = element_text(size = 15),
axis.text.y = element_text(size = 15),
legend.text = element_text(size = 15),
legend.key.size = unit(1, "cm"))
# scale_x_log10()
)
# glm_res_true <- glm(prop ~ area * true_fct , data = total, familly = mgcv::betar(link="logit"))
glm_res_true <- mgcv::gam(prop ~ area * true_fct , data = total, familly = mgcv::betar(link="logit"))
summary(glm_res_true)
Utilities.Package::Model_Check(glm_res_true)
NewData<-expand_grid(res=unique(total$res),
true_fct=unique(total$true_fct),
area = res*res)
pred <- predict(glm_res_true, NewData, se.fit = T, type = "link")
NewData <- NewData %>%
mutate(fit = pred$fit*100,
se = pred$se.fit*100,
true_fct=as.factor(true_fct))
cols_fill <- c("1" = "#DAA520",
"2" = "#b3ff1a",
"3" = "#389318",
"4" = "#873e23",
"5" = "#b3002d",
"6" = "#70543e",
"7" = 'grey',
"8" = "#42c9bc")
(plot <- ggplot(NewData)+
geom_ribbon(aes(x = res, y = fit, ymax = fit+se, ymin = fit-se,
color = true_fct, group = true_fct, fill = true_fct
), alpha = 0.2)+
geom_line(aes(x = res, y = fit,
color = true_fct, group = true_fct
))+
# ylim(0,1)+
scale_fill_manual(name = NULL,
values = cols_fill,
labels = c("Green algae", "Seagrass", "Brown algae", "Red algae", "Sediment", "Sunglint","Water")) +
scale_color_manual(name = NULL,
values = cols_fill,
labels = c("Green algae", "Seagrass", "Brown algae", "Red algae", "Sediment", "Sunglint","Water"))+
theme_Bede()+
xlab("Resolution (m)") +
ylab("Agreement")+
theme(axis.title = element_text(size = 20),
axis.text.x = element_text(size = 15),
axis.text.y = element_text(size = 15),
legend.text = element_text(size = 15),
legend.key.size = unit(1, "cm"))
# scale_x_log10()
)
(plot <- ggplot(NewData)+
geom_ribbon(aes(x = area, y = fit, ymax = fit+se, ymin = fit-se,
color = true_fct, group = true_fct, fill = true_fct
), alpha = 0.2)+
geom_line(aes(x = area, y = fit,
color = true_fct, group = true_fct
))+
# ylim(0,1)+
scale_fill_manual(name = NULL,
values = cols_fill,
labels = c("Green algae", "Seagrass", "Brown algae", "Red algae", "Sediment", "Sunglint","Water")) +
scale_color_manual(name = NULL,
values = cols_fill,
labels = c("Green algae", "Seagrass", "Brown algae", "Red algae", "Sediment", "Sunglint","Water"))+
theme_Bede()+
xlab("Resolution (m)") +
ylab("Agreement")+
theme(axis.title = element_text(size = 20),
axis.text.x = element_text(size = 15),
axis.text.y = element_text(size = 15),
legend.text = element_text(size = 15),
legend.key.size = unit(1, "cm"))
# scale_x_log10()
)
NewData
ggplot(NewData)+
geom_ribbon(aes(x = res, y = fit, ymax = fit+se, ymin = fit-se,
color = true_fct, group = true_fct, fill = true_fct
), alpha = 0.2)
(plot <- ggplot(NewData)+
geom_ribbon(aes(x = sqrt(area), y = fit, ymax = fit+se, ymin = fit-se,
color = true_fct, group = true_fct, fill = true_fct
), alpha = 0.2)+
geom_line(aes(x = sqrt(area), y = fit,
color = true_fct, group = true_fct
))+
# ylim(0,1)+
scale_fill_manual(name = NULL,
values = cols_fill,
labels = c("Green algae", "Seagrass", "Brown algae", "Red algae", "Sediment", "Sunglint","Water")) +
scale_color_manual(name = NULL,
values = cols_fill,
labels = c("Green algae", "Seagrass", "Brown algae", "Red algae", "Sediment", "Sunglint","Water"))+
theme_Bede()+
xlab("Resolution (m)") +
ylab("Agreement")+
theme(axis.title = element_text(size = 20),
axis.text.x = element_text(size = 15),
axis.text.y = element_text(size = 15),
legend.text = element_text(size = 15),
legend.key.size = unit(1, "cm"))
# scale_x_log10()
)
