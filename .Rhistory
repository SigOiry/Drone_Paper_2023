breaks = c(0.05,0.25,0.50,1))+
# scale_fill_Bede("mixed",
#                 discrete = F,
#                 reverse = TRUE,
#                 na.value = "white",
#                 trans = "sqrt",
#                 labels = c("5","25", "50", "75", "100"),
#                 breaks = c(0.05,0.25,0.50,0.75,0.9999))+
labs(fill = "Proportion \n of pixels")+
scale_x_continuous(breaks = seq(0.5,1.5, by = 1),
labels = c("Chlorophyceae","Magnoliopsida"),
expand = c(0, 0),
position = "top",
limits = c(0,2))+
scale_y_continuous(breaks = seq(0.5,1.5, by = 1),
labels = c("Magnoliopsida","Chlorophyceae"),
expand = c(0, 0),
limits = c(0,2))+
geom_label(data = labels_green,aes(x = x, y = y, label = label ))+
xlab("References")+
ylab("Prediction")+
# ggplot2::annotation_custom(ggplotGrob(small_validation_matrices), xmin = 12, ymin = 0)+
theme_Bede()+
theme(
panel.border = element_blank(),
axis.line=element_blank(),
axis.text.x = element_text(size = 20),
axis.text.y = element_text(size = 20, angle =90, hjust = 0.5),
# legend.position = "top",
# legend.position = c(0.73, 0.9),
# legend.direction="horizontal",
# legend.key.width = unit(2,"cm"),
legend.text = element_text(size = 20),
legend.title = element_text(size = 20, vjust = 2),
legend.title.align = 0.5,
legend.justification = "center")
plot_green
ggsave("./Figures/Validation/ConfusionMatrixGreen.png", plot_green, width = 671*4, height = 479*4, units = "px" )
df_training<-read.csv("Data/training/TrainandValid_NewStanRawMetrics_Processed.csv")
validation_metrics_green
validation_metrics_green$overall
validation_metrics_green$overall[1]
validation_metrics_green$overall[[1]]
quarto render
#| cache: true
#| echo: false
#| warning: false
#| fig-cap: Class of vegetation used to train the Neural Network model and their standardised spectral signature
#| label: fig-vegetation
#| fig-width: 10
#| fig-height: 7
#| out-width: "100%"
knitr::include_graphics("Figures/Low_res/Spectral_shapes_total.png")
df_validation<-read.csv("Data/training/TrainandValid_NewStanRawMetrics_Processed_valid.csv")
df_training<-read.csv("Data/training/TrainandValid_NewStanRawMetrics_Processed.csv")
df_validation<-"Data/accuracy_assesment_low&high_flights.csv" %>%
read_delim(delim = ",", escape_double = FALSE, trim_ws = TRUE) %>%
dplyr::filter(True != "Sediment",
True != "Sun Glint",
True != "Water",
True != "Xanthophyceae") %>%
mutate(True = case_when(True == "Green Algae" ~ "Chlorophyceae",
True == "Microphytobenthos" ~ "Bacillariophyceae",
True == "Rhodophyceae" ~ "Rhodophyceae",
True == "Pheophyceae" ~ "Phaeophyceae",
TRUE ~ True)) %>%
group_by(True) %>%
summarise(n = n())
#| cache: false
#| echo: false
#| warning: false
#| eval: true
library(flextable)
library(tidyverse)
library(tidyterra)
library(tidymodels)
library(Utilities.Package)
library(patchwork)
library(sf)
library(rnaturalearth)
library(rnaturalearthdata)
library(rnaturalearthhires)
library(ggforce)
library(patchwork)
library(terra)
library(gt)
library(scales)
library(magick)
library(grid)
library(ggforce)
library(statebins)
library(ggridges)
library(ggspatial)
library(terrainr)
# library(ggpmisc)
library(broom)
library(stars)
library(gmodels)
library(caret)
options(scipen = 100000000)
df_validation<-"Data/accuracy_assesment_low&high_flights.csv" %>%
read_delim(delim = ",", escape_double = FALSE, trim_ws = TRUE)
df_training<-read.csv("Data/training/TrainandValid_NewStanRawMetrics_Processed.csv")
df_validation<-read.csv("Data/training/TrainandValid_NewStanRawMetrics_Processed_valid.csv")
df_training %>%
left_join(df_validation, by = "True") %>%
rename(`Validation Pixels` = "n",
Class = "True",
`Training Pixels` = "Training_Pixels") %>%
flextable() %>%
# border_remove() %>%
flextable::align(align = "center",part = "all") %>%
flextable::align(align = "center",part = "header") %>%
set_table_properties(layout = "autofit")
df<-data.frame(
Country = c(
rep("France",5),
rep("Portugal",4)
),
Site = c(
rep("Gulf of Morbihan",3),
rep("Bourgneuf Bay",2),
rep("Aveiro Lagoon",4)
),
Name = c(
"Arz Island",
"Duer",
"Duer",
"Barbâtre",
"L'Epine",
"Inner Lagoon",
"Mataducos",
"Gafanha",
"Gafanha"
),
Altitude = c(
"12m",
"12m",
"120m",
"120m",
"120m",
"120m",
"120m",
"120m",
"12m"
),
Utility = c(
"Training",
"Training",
"Validation",
"Validation",
"Validation",
"Validation",
"Validation",
"Validation",
"Training"
)
)
brdr1 <- fp_border_default(color = "black", width = 1.5)
brdr2 <- fp_border_default(color = "grey", width = 1.5)
brdr3 <- fp_border_default(color = "grey40", width = 1.5)
flextable(df)  %>%
merge_v(j = 1) %>%
merge_v(j = 2) %>%
border_remove() %>%
hline_top(border=brdr1) %>%
hline(i=5, border=brdr1) %>%
hline(i=1,j = 3:5, border=brdr2) %>%
hline(i=2, border=brdr2) %>%
hline(i=3, j = 2:5, border=brdr3) %>%
hline(i=4, j = 3:5, border=brdr2) %>%
hline(i=6, border=brdr2) %>%
hline(i=6, j = 1:2, border=brdr1) %>%
hline(i=7, border=brdr2) %>%
hline(i=8, border=brdr2) %>%
hline(i=9, border=brdr1) %>%
vline(j=2, border = brdr1) %>%
flextable::align(align = "center",part = "all") %>%
flextable::align(align = "center",part = "header") %>%
# set_caption(caption = "Table 1 List of drone Flight, summarising the date, the altitude and the purpose of each flight.") %>%
set_table_properties(layout = "autofit") %>%
autofit()
ncol(df)
df<-data.frame(
Country = c(
rep("France",5),
rep("Portugal",4)
),
Site = c(
rep("Gulf of Morbihan",3),
rep("Bourgneuf Bay",2),
rep("Aveiro Lagoon",4)
),
Name = c(
"Arz Island",
"Duer",
"Duer",
"Barbâtre",
"L'Epine",
"Inner Lagoon",
"Mataducos",
"Gafanha",
"Gafanha"
),
Altitude = c(
"12m",
"12m",
"120m",
"120m",
"120m",
"120m",
"120m",
"120m",
"12m"
),
Utility = c(
"Training",
"Training",
"Validation",
"Validation",
"Validation",
"Validation",
"Validation",
"Validation",
"Training"
)
)
brdr1 <- fp_border_default(color = "black", width = 1.5)
brdr2 <- fp_border_default(color = "grey", width = 1.5)
brdr3 <- fp_border_default(color = "grey40", width = 1.5)
i = 16.5 # width of the side borders in the word_document output (in centimeters)
w = i*0.3937 # width of the side borders in the word_document output (in inches)
flextable(df)  %>%
width(width = (w/(ncol(df)))) %>%
merge_v(j = 1) %>%
merge_v(j = 2) %>%
border_remove() %>%
hline_top(border=brdr1) %>%
hline(i=5, border=brdr1) %>%
hline(i=1,j = 3:5, border=brdr2) %>%
hline(i=2, border=brdr2) %>%
hline(i=3, j = 2:5, border=brdr3) %>%
hline(i=4, j = 3:5, border=brdr2) %>%
hline(i=6, border=brdr2) %>%
hline(i=6, j = 1:2, border=brdr1) %>%
hline(i=7, border=brdr2) %>%
hline(i=8, border=brdr2) %>%
hline(i=9, border=brdr1) %>%
vline(j=2, border = brdr1) %>%
flextable::align(align = "center",part = "all") %>%
flextable::align(align = "center",part = "header") %>%
# set_caption(caption = "Table 1 List of drone Flight, summarising the date, the altitude and the purpose of each flight.") %>%
set_table_properties(layout = "autofit") %>%
autofit()
flextable(df)  %>%
flextable::width(width = (w/(ncol(df)))) %>%
merge_v(j = 1) %>%
merge_v(j = 2) %>%
border_remove() %>%
hline_top(border=brdr1) %>%
hline(i=5, border=brdr1) %>%
hline(i=1,j = 3:5, border=brdr2) %>%
hline(i=2, border=brdr2) %>%
hline(i=3, j = 2:5, border=brdr3) %>%
hline(i=4, j = 3:5, border=brdr2) %>%
hline(i=6, border=brdr2) %>%
hline(i=6, j = 1:2, border=brdr1) %>%
hline(i=7, border=brdr2) %>%
hline(i=8, border=brdr2) %>%
hline(i=9, border=brdr1) %>%
vline(j=2, border = brdr1) %>%
flextable::align(align = "center",part = "all") %>%
flextable::align(align = "center",part = "header") %>%
# set_caption(caption = "Table 1 List of drone Flight, summarising the date, the altitude and the purpose of each flight.") %>%
set_table_properties(layout = "autofit") %>%
autofit()
flextable(df)  %>%
merge_v(j = 1) %>%
merge_v(j = 2) %>%
border_remove() %>%
hline_top(border=brdr1) %>%
hline(i=5, border=brdr1) %>%
hline(i=1,j = 3:5, border=brdr2) %>%
hline(i=2, border=brdr2) %>%
hline(i=3, j = 2:5, border=brdr3) %>%
hline(i=4, j = 3:5, border=brdr2) %>%
hline(i=6, border=brdr2) %>%
hline(i=6, j = 1:2, border=brdr1) %>%
hline(i=7, border=brdr2) %>%
hline(i=8, border=brdr2) %>%
hline(i=9, border=brdr1) %>%
vline(j=2, border = brdr1) %>%
flextable::align(align = "center",part = "all") %>%
flextable::align(align = "center",part = "header") %>%
# set_caption(caption = "Table 1 List of drone Flight, summarising the date, the altitude and the purpose of each flight.") %>%
set_table_properties(layout = "autofit") %>%
as_raster()
flx1<-flextable(df)  %>%
merge_v(j = 1) %>%
merge_v(j = 2) %>%
border_remove() %>%
hline_top(border=brdr1) %>%
hline(i=5, border=brdr1) %>%
hline(i=1,j = 3:5, border=brdr2) %>%
hline(i=2, border=brdr2) %>%
hline(i=3, j = 2:5, border=brdr3) %>%
hline(i=4, j = 3:5, border=brdr2) %>%
hline(i=6, border=brdr2) %>%
hline(i=6, j = 1:2, border=brdr1) %>%
hline(i=7, border=brdr2) %>%
hline(i=8, border=brdr2) %>%
hline(i=9, border=brdr1) %>%
vline(j=2, border = brdr1) %>%
flextable::align(align = "center",part = "all") %>%
flextable::align(align = "center",part = "header") %>%
# set_caption(caption = "Table 1 List of drone Flight, summarising the date, the altitude and the purpose of each flight.") %>%
set_table_properties(layout = "autofit") %>%
as_raster()
plot(flx1)
knitr::include_graphics(flx1)
ggplot(flx1)+
geom_raster()
writeRaster(flx1, "test1.png")
writeRaster( "test1.png",flx1)
writeRaster(flx1, "test1.png")
save_as_image(flx1, "test1.png", expand = 10, res = 200)
flx1<-flextable(df)  %>%
merge_v(j = 1) %>%
merge_v(j = 2) %>%
border_remove() %>%
hline_top(border=brdr1) %>%
hline(i=5, border=brdr1) %>%
hline(i=1,j = 3:5, border=brdr2) %>%
hline(i=2, border=brdr2) %>%
hline(i=3, j = 2:5, border=brdr3) %>%
hline(i=4, j = 3:5, border=brdr2) %>%
hline(i=6, border=brdr2) %>%
hline(i=6, j = 1:2, border=brdr1) %>%
hline(i=7, border=brdr2) %>%
hline(i=8, border=brdr2) %>%
hline(i=9, border=brdr1) %>%
vline(j=2, border = brdr1) %>%
flextable::align(align = "center",part = "all") %>%
flextable::align(align = "center",part = "header") %>%
# set_caption(caption = "Table 1 List of drone Flight, summarising the date, the altitude and the purpose of each flight.") %>%
set_table_properties(layout = "autofit")
save_as_image(flx1, "test1.png", expand = 10, res = 200)
save_as_image(flx1, "test1.png", res = 300)
flx1
df<-data.frame(
Country = c(
rep("France",5),
rep("Portugal",4)
),
Site = c(
rep("Gulf of Morbihan",3),
rep("Bourgneuf Bay",2),
rep("Aveiro Lagoon",4)
),
Name = c(
"Arz Island",
"Duer",
"Duer",
"Barbâtre",
"L'Epine",
"Inner Lagoon",
"Mataducos",
"Gafanha",
"Gafanha"
),
Altitude = c(
"12m",
"12m",
"120m",
"120m",
"120m",
"120m",
"120m",
"120m",
"12m"
),
Utility = c(
"Training",
"Training",
"Validation",
"Validation",
"Validation",
"Validation",
"Validation",
"Validation",
"Training"
)
)
brdr1 <- fp_border_default(color = "black", width = 1.5)
brdr2 <- fp_border_default(color = "grey", width = 1.5)
brdr3 <- fp_border_default(color = "grey40", width = 1.5)
i = 16.5 # width of the side borders in the word_document output (in centimeters)
w = i*0.3937 # width of the side borders in the word_document output (in inches)
flx1<-flextable(df)  %>%
flextable::width(width = (w/(ncol(df)))) %>%
merge_v(j = 1) %>%
merge_v(j = 2) %>%
border_remove() %>%
hline_top(border=brdr1) %>%
hline(i=5, border=brdr1) %>%
hline(i=1,j = 3:5, border=brdr2) %>%
hline(i=2, border=brdr2) %>%
hline(i=3, j = 2:5, border=brdr3) %>%
hline(i=4, j = 3:5, border=brdr2) %>%
hline(i=6, border=brdr2) %>%
hline(i=6, j = 1:2, border=brdr1) %>%
hline(i=7, border=brdr2) %>%
hline(i=8, border=brdr2) %>%
hline(i=9, border=brdr1) %>%
vline(j=2, border = brdr1) %>%
flextable::align(align = "center",part = "all") %>%
flextable::align(align = "center",part = "header") %>%
# set_caption(caption = "Table 1 List of drone Flight, summarising the date, the altitude and the purpose of each flight.") %>%
set_table_properties(layout = "autofit")
save_as_image(flx1, "test1.png", res = 300)
df_validation<-read.csv("Data/training/TrainandValid_NewStanRawMetrics_Processed_valid.csv")
i = 16.5 # width of the side borders in the word_document output (in centimeters)
w = i*0.3937 # width of the side borders in the word_document output (in inches)
df_flx2<-df_training %>%
left_join(df_validation, by = "True") %>%
rename(`Validation Pixels` = "n",
Class = "True",
`Training Pixels` = "Training_Pixels")
flx2 <- df_flx2
flx2 <- df_flx2 %>%
flextable() %>%
flextable::width(width = (w/(ncol(df_flx2)))) %>%
# border_remove() %>%
flextable::align(align = "center",part = "all") %>%
flextable::align(align = "center",part = "header") %>%
set_table_properties(layout = "autofit")
save_as_image(flx2, "Figures/table_validation_px.png", res = 300)
#| cache: false
#| echo: false
#| eval: false
#| warning: false
df<-data.frame(
Country = c(
rep("France",5),
rep("Portugal",4)
),
Site = c(
rep("Gulf of Morbihan",3),
rep("Bourgneuf Bay",2),
rep("Aveiro Lagoon",4)
),
Name = c(
"Arz Island",
"Duer",
"Duer",
"Barbâtre",
"L'Epine",
"Inner Lagoon",
"Mataducos",
"Gafanha",
"Gafanha"
),
Altitude = c(
"12m",
"12m",
"120m",
"120m",
"120m",
"120m",
"120m",
"120m",
"12m"
),
Utility = c(
"Training",
"Training",
"Validation",
"Validation",
"Validation",
"Validation",
"Validation",
"Validation",
"Training"
)
)
brdr1 <- fp_border_default(color = "black", width = 1.5)
brdr2 <- fp_border_default(color = "grey", width = 1.5)
brdr3 <- fp_border_default(color = "grey40", width = 1.5)
i = 16.5 # width of the side borders in the word_document output (in centimeters)
w = i*0.3937 # width of the side borders in the word_document output (in inches)
flx1<-flextable(df)  %>%
flextable::width(width = (w/(ncol(df)))) %>%
merge_v(j = 1) %>%
merge_v(j = 2) %>%
border_remove() %>%
hline_top(border=brdr1) %>%
hline(i=5, border=brdr1) %>%
hline(i=1,j = 3:5, border=brdr2) %>%
hline(i=2, border=brdr2) %>%
hline(i=3, j = 2:5, border=brdr3) %>%
hline(i=4, j = 3:5, border=brdr2) %>%
hline(i=6, border=brdr2) %>%
hline(i=6, j = 1:2, border=brdr1) %>%
hline(i=7, border=brdr2) %>%
hline(i=8, border=brdr2) %>%
hline(i=9, border=brdr1) %>%
vline(j=2, border = brdr1) %>%
flextable::align(align = "center",part = "all") %>%
flextable::align(align = "center",part = "header") %>%
# set_caption(caption = "Table 1 List of drone Flight, summarising the date, the altitude and the purpose of each flight.") %>%
set_table_properties(layout = "autofit")
save_as_image(flx1, "Figures/table_flights.png", res = 300)
