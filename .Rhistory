size = 8
)+
geom_text(
data = other_table_y_axis,
aes(x = x, y = y, label = label),
size = 8,
hjust = 1,
size = 8
)+
geom_text(
data = other_table_values,
aes(x = x, y = y, label = label),
# fill = "#ffffff99",
size = 8
)+
geom_text(
data = global_accuracy_coord,
aes(x = x, y = y, label = label),
# fill = "#ffffff99",
size = 12,
color = "firebrick4"
)+
geom_label(
data = df_Label_Sites,
aes(x = x, y = y, label = lab),
fill = "#ffffff99",
size = 6.8
)+
geom_text(
data = x_axis_text,
aes(x = x, y = y, label = lab),
# fill = "#ffffff99",
# vjust = 1,
hjust = 0,
size = 9,
angle = 40
)+
geom_text(
data = y_axis_text,
aes(x = x, y = y, label = lab),
# fill = "#ffffff99",
hjust = 1,
size = 9,
# angle = 20
)+
# geom_text(
#   aes(x = 13.8, y = 12.72, label = "Producer's Accuracy"),
#   # fill = "#ffffff99",
#   size = 9,
#   angle = 20
#   )+
# geom_text(
#   aes(x = 0, y = 0, label = "User's Accuracy"),
#   # fill = "#ffffff99",
#   size = 9
#   )+
xlab("References")+
ylab("Prediction")+
# ggplot2::annotation_custom(ggplotGrob(small_validation_matrices), xmin = 12, ymin = 0)+
theme_Bede()+
theme(
# axis.title.x = element_text(size = 35),
# axis.title.y = element_text(size = 35),
axis.title.y = element_blank(),
axis.title.x = element_blank(),
# axis.text.x = element_text(size = 30),
axis.text.x = element_blank(),
# axis.text.y = element_text(size = 25),
axis.text.y = element_blank(),
axis.ticks.x = element_blank(),
axis.ticks.y = element_blank(),
panel.border = element_blank(),
axis.line=element_blank(),
# legend.position = "top",
legend.position = c(0.73, 0.9),
legend.direction="horizontal",
legend.key.width = unit(2,"cm"),
legend.text = element_text(size = 20),
legend.title = element_text(size = 20, vjust = 2),
legend.title.align = 0.5,
legend.justification = "center")+
geom_text(aes(x = 7, y = 16, label = "Truth"), size = 14)+
geom_text(aes(x = -5, y = 6, label = "Prediction"), angle = 90, size = 14)
plot_matrix_global
ggsave("Figures/High_res/Validation/ConfusionMatrixGlobal.png",plot_matrix_global , width = 1920*4, height = 1032*4, units = "px")
plot_matrix_global <-
ggplot()+
geom_spatraster(data = (confmat_rast),
# show.legend = F,
na.rm = TRUE
)+
geom_spatraster(data = confmat_rast_GafanhaLow,
na.rm = TRUE
)+
geom_sf(data = confmat_rast_GafanhaLow_sf,
fill = "transparent")+
geom_spatraster(data = confmat_rast_GafanhaHigh,
na.rm = TRUE
)+
geom_sf(data = confmat_rast_GafanhaHigh_sf,
fill = "transparent")+
geom_spatraster(data = confmat_rast_Boat,
na.rm = TRUE
)+
geom_sf(data = confmat_rast_Boat_sf,
fill = "transparent")+
geom_spatraster(data = confmat_rast_Horse_rooster,
na.rm = TRUE
)+
geom_sf(data = confmat_rast_Horse_rooster_sf,
fill = "transparent")+
geom_spatraster(data = confmat_rast_NorthDike,
na.rm = TRUE
)+
geom_sf(data = confmat_rast_NorthDike_sf,
fill = "transparent")+
geom_spatraster(data = confmat_rast_Handfisher_1,
na.rm = TRUE
)+
geom_sf(data = confmat_rast_Handfisher_1_sf,
fill = "transparent")+
geom_spatraster(data = confmat_rast_Arz,
na.rm = TRUE
)+
geom_sf(data = confmat_rast_Arz_sf,
fill = "transparent")+
geom_spatraster(data = confmat_rast_DuerLow,
na.rm = TRUE
)+
geom_sf(data = confmat_rast_DuerLow_sf,
fill = "transparent")+
# geom_spatraster(data = confmat_rast_Kerdrean,
#               na.rm = TRUE
#               )+
# geom_sf(data = confmat_rast_Kerdrean_sf,
#         fill = "transparent")+
# geom_sf(data = centroid_cells,
#         fill = "transparent")+
geom_path(data = centroid_cells_df_rows,
aes(x = X, y = Y, group = Row),
linewidth = 2,
linejoin = "round",
lineend = "round",
colour = "grey")+
geom_path(data = centroid_cells_df_cols,
aes(x = X, y = Y, group = cols),
linewidth = 2,
linejoin = "round",
lineend = "round",
colour = "grey")+
scale_fill_gradientn(
# colours = c("black","firebrick4","goldenrod","yellow","chartreuse3"),
# colours = c("khaki1","goldenrod","firebrick3","chartreuse4"),
colours = c("khaki1","firebrick4","firebrick4","firebrick4","#3e0b0b"),
# colours = c("#7d0000","#00b300","#00b300","#00b300","#007d00"),
na.value = "white",
trans = "sqrt",
labels = c("0.05","0.25", "0.50", "0.75", "1"),
breaks = c(0.05,0.25,0.50,0.75,0.9999))+
# scale_fill_Bede("mixed",
#                 discrete = F,
#                 reverse = TRUE,
#                 na.value = "white",
#                 trans = "sqrt",
#                 labels = c("5","25", "50", "75", "100"),
#                 breaks = c(0.05,0.25,0.50,0.75,0.9999))+
labs(fill = "Proportion \n of pixels")+
scale_x_continuous(breaks = seq(1,11, by = 2),
labels = c("Sediment","Bacillariophyceae","Chlorophyceae","Magnoliopsida","Rhodophyceae","Phaeophyceae"),
expand = c(0, 0),
position = "top",
limits = c(-7,29))+
scale_y_continuous(breaks = seq(1,11, by = 2),
labels = c("Phaeophyceae","Rhodophyceae","Magnoliopsida","Chlorophyceae","Bacillariophyceae","Sediment"),
expand = c(0, 0.1),
limits = c(-5,17.5))+
geom_polygon(aes(x = c(-3,26,26,-3),
y = c(-4,-4,-5,-5)),
fill = "lightgrey",
color = "transparent")+
geom_polygon(aes(x = c(23.142,26,26,23.142),
y = c(-1,-1,-4,-4)),
fill = "lightgrey",
color = "transparent")+
geom_path(
data = data.frame(
x = c(0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,0,2,2,4,4,6,6,8,8,10,10,12,12),
y = c(0,0,2,2,4,4,6,6,8,8,10,10,12,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12),
group = c(1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13,14,14)
),
aes(x,y,group= group),
linewidth = 1
)+
geom_path(data = other_table_path,
aes(x = x,
y = y,
group = group),
linewidth = 1)+
geom_label(
data = df_corrected_accuracy,
aes(x = x, y = y, label = paste0(round(lab,3)*100,"%")),
fill = "#ffffff99",
size = 9
)+
geom_text(
data = df_Sens_Spec,
aes(x = x, y = y, label = paste0(round(lab,4)*100,"%")),
# fill = "#ffffff99",
size = 8
)+
geom_text(
data = other_table_title,
aes(x = x, y = y, label = label),
# fill = "#ffffff99",
size = 8
)+
geom_text(
data = other_table_y_axis,
aes(x = x, y = y, label = label),
size = 8,
hjust = 1,
size = 8
)+
geom_text(
data = other_table_values,
aes(x = x, y = y, label = label),
# fill = "#ffffff99",
size = 8
)+
geom_text(
data = global_accuracy_coord,
aes(x = x, y = y, label = label),
# fill = "#ffffff99",
size = 12,
color = "firebrick4"
)+
geom_label(
data = df_Label_Sites,
aes(x = x, y = y, label = lab),
fill = "#ffffff99",
size = 6.8
)+
geom_text(
data = x_axis_text,
aes(x = x, y = y, label = lab),
# fill = "#ffffff99",
# vjust = 1,
hjust = 0,
size = 9,
angle = 40
)+
geom_text(
data = y_axis_text,
aes(x = x, y = y, label = lab),
# fill = "#ffffff99",
hjust = 1,
size = 9,
# angle = 20
)+
# geom_text(
#   aes(x = 13.8, y = 12.72, label = "Producer's Accuracy"),
#   # fill = "#ffffff99",
#   size = 9,
#   angle = 20
#   )+
# geom_text(
#   aes(x = 0, y = 0, label = "User's Accuracy"),
#   # fill = "#ffffff99",
#   size = 9
#   )+
xlab("References")+
ylab("Prediction")+
# ggplot2::annotation_custom(ggplotGrob(small_validation_matrices), xmin = 12, ymin = 0)+
theme_Bede()+
theme(
# axis.title.x = element_text(size = 35),
# axis.title.y = element_text(size = 35),
axis.title.y = element_blank(),
axis.title.x = element_blank(),
# axis.text.x = element_text(size = 30),
axis.text.x = element_blank(),
# axis.text.y = element_text(size = 25),
axis.text.y = element_blank(),
axis.ticks.x = element_blank(),
axis.ticks.y = element_blank(),
panel.border = element_blank(),
axis.line=element_blank(),
# legend.position = "top",
legend.position = c(0.73, 0.85),
legend.direction="horizontal",
legend.key.width = unit(2,"cm"),
legend.text = element_text(size = 20),
legend.title = element_text(size = 20, vjust = 2),
legend.title.align = 0.5,
legend.justification = "center")+
geom_text(aes(x = 7, y = 16, label = "Truth"), size = 14)+
geom_text(aes(x = -5, y = 6, label = "Prediction"), angle = 90, size = 14)
plot_matrix_global
plot_matrix_global <-
ggplot()+
geom_spatraster(data = (confmat_rast),
# show.legend = F,
na.rm = TRUE
)+
geom_spatraster(data = confmat_rast_GafanhaLow,
na.rm = TRUE
)+
geom_sf(data = confmat_rast_GafanhaLow_sf,
fill = "transparent")+
geom_spatraster(data = confmat_rast_GafanhaHigh,
na.rm = TRUE
)+
geom_sf(data = confmat_rast_GafanhaHigh_sf,
fill = "transparent")+
geom_spatraster(data = confmat_rast_Boat,
na.rm = TRUE
)+
geom_sf(data = confmat_rast_Boat_sf,
fill = "transparent")+
geom_spatraster(data = confmat_rast_Horse_rooster,
na.rm = TRUE
)+
geom_sf(data = confmat_rast_Horse_rooster_sf,
fill = "transparent")+
geom_spatraster(data = confmat_rast_NorthDike,
na.rm = TRUE
)+
geom_sf(data = confmat_rast_NorthDike_sf,
fill = "transparent")+
geom_spatraster(data = confmat_rast_Handfisher_1,
na.rm = TRUE
)+
geom_sf(data = confmat_rast_Handfisher_1_sf,
fill = "transparent")+
geom_spatraster(data = confmat_rast_Arz,
na.rm = TRUE
)+
geom_sf(data = confmat_rast_Arz_sf,
fill = "transparent")+
geom_spatraster(data = confmat_rast_DuerLow,
na.rm = TRUE
)+
geom_sf(data = confmat_rast_DuerLow_sf,
fill = "transparent")+
# geom_spatraster(data = confmat_rast_Kerdrean,
#               na.rm = TRUE
#               )+
# geom_sf(data = confmat_rast_Kerdrean_sf,
#         fill = "transparent")+
# geom_sf(data = centroid_cells,
#         fill = "transparent")+
geom_path(data = centroid_cells_df_rows,
aes(x = X, y = Y, group = Row),
linewidth = 2,
linejoin = "round",
lineend = "round",
colour = "grey")+
geom_path(data = centroid_cells_df_cols,
aes(x = X, y = Y, group = cols),
linewidth = 2,
linejoin = "round",
lineend = "round",
colour = "grey")+
scale_fill_gradientn(
# colours = c("black","firebrick4","goldenrod","yellow","chartreuse3"),
# colours = c("khaki1","goldenrod","firebrick3","chartreuse4"),
colours = c("khaki1","firebrick4","firebrick4","firebrick4","#3e0b0b"),
# colours = c("#7d0000","#00b300","#00b300","#00b300","#007d00"),
na.value = "white",
trans = "sqrt",
labels = c("0.05","0.25", "0.50", "0.75", "1"),
breaks = c(0.05,0.25,0.50,0.75,0.9999))+
# scale_fill_Bede("mixed",
#                 discrete = F,
#                 reverse = TRUE,
#                 na.value = "white",
#                 trans = "sqrt",
#                 labels = c("5","25", "50", "75", "100"),
#                 breaks = c(0.05,0.25,0.50,0.75,0.9999))+
labs(fill = "Proportion \n of pixels")+
scale_x_continuous(breaks = seq(1,11, by = 2),
labels = c("Sediment","Bacillariophyceae","Chlorophyceae","Magnoliopsida","Rhodophyceae","Phaeophyceae"),
expand = c(0, 0),
position = "top",
limits = c(-7,29))+
scale_y_continuous(breaks = seq(1,11, by = 2),
labels = c("Phaeophyceae","Rhodophyceae","Magnoliopsida","Chlorophyceae","Bacillariophyceae","Sediment"),
expand = c(0, 0.1),
limits = c(-5,17.5))+
geom_polygon(aes(x = c(-3,26,26,-3),
y = c(-4,-4,-5,-5)),
fill = "lightgrey",
color = "transparent")+
geom_polygon(aes(x = c(23.142,26,26,23.142),
y = c(-1,-1,-4,-4)),
fill = "lightgrey",
color = "transparent")+
geom_path(
data = data.frame(
x = c(0,12,0,12,0,12,0,12,0,12,0,12,0,12,0,0,2,2,4,4,6,6,8,8,10,10,12,12),
y = c(0,0,2,2,4,4,6,6,8,8,10,10,12,12,0,12,0,12,0,12,0,12,0,12,0,12,0,12),
group = c(1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13,14,14)
),
aes(x,y,group= group),
linewidth = 1
)+
geom_path(data = other_table_path,
aes(x = x,
y = y,
group = group),
linewidth = 1)+
geom_label(
data = df_corrected_accuracy,
aes(x = x, y = y, label = paste0(round(lab,3)*100,"%")),
fill = "#ffffff99",
size = 9
)+
geom_text(
data = df_Sens_Spec,
aes(x = x, y = y, label = paste0(round(lab,4)*100,"%")),
# fill = "#ffffff99",
size = 8
)+
geom_text(
data = other_table_title,
aes(x = x, y = y, label = label),
# fill = "#ffffff99",
size = 8
)+
geom_text(
data = other_table_y_axis,
aes(x = x, y = y, label = label),
size = 8,
hjust = 1,
size = 8
)+
geom_text(
data = other_table_values,
aes(x = x, y = y, label = label),
# fill = "#ffffff99",
size = 8
)+
geom_text(
data = global_accuracy_coord,
aes(x = x, y = y, label = label),
# fill = "#ffffff99",
size = 12,
color = "firebrick4"
)+
geom_label(
data = df_Label_Sites,
aes(x = x, y = y, label = lab),
fill = "#ffffff99",
size = 6.8
)+
geom_text(
data = x_axis_text,
aes(x = x, y = y, label = lab),
# fill = "#ffffff99",
# vjust = 1,
hjust = 0,
size = 9,
angle = 40
)+
geom_text(
data = y_axis_text,
aes(x = x, y = y, label = lab),
# fill = "#ffffff99",
hjust = 1,
size = 9,
# angle = 20
)+
# geom_text(
#   aes(x = 13.8, y = 12.72, label = "Producer's Accuracy"),
#   # fill = "#ffffff99",
#   size = 9,
#   angle = 20
#   )+
# geom_text(
#   aes(x = 0, y = 0, label = "User's Accuracy"),
#   # fill = "#ffffff99",
#   size = 9
#   )+
xlab("References")+
ylab("Prediction")+
# ggplot2::annotation_custom(ggplotGrob(small_validation_matrices), xmin = 12, ymin = 0)+
theme_Bede()+
theme(
# axis.title.x = element_text(size = 35),
# axis.title.y = element_text(size = 35),
axis.title.y = element_blank(),
axis.title.x = element_blank(),
# axis.text.x = element_text(size = 30),
axis.text.x = element_blank(),
# axis.text.y = element_text(size = 25),
axis.text.y = element_blank(),
axis.ticks.x = element_blank(),
axis.ticks.y = element_blank(),
panel.border = element_blank(),
axis.line=element_blank(),
# legend.position = "top",
legend.position = c(0.73, 0.8),
legend.direction="horizontal",
legend.key.width = unit(2,"cm"),
legend.text = element_text(size = 20),
legend.title = element_text(size = 20, vjust = 2),
legend.title.align = 0.5,
legend.justification = "center")+
geom_text(aes(x = 7, y = 16, label = "Truth"), size = 14)+
geom_text(aes(x = -5, y = 6, label = "Prediction"), angle = 90, size = 14)
plot_matrix_global
ggsave("Figures/High_res/Validation/ConfusionMatrixGlobal.png",plot_matrix_global , width = 1920*4, height = 1032*4, units = "px")
