low_alt <- list_pred %>%
dplyr::filter(site == list_pred$site[i],
res == min(res)) %>%
sf::read_sf(path)
list_pred %>%
dplyr::filter(site == list_pred$site[i],
res == min(res))
low_alt <- list_pred %>%
dplyr::filter(site == list_pred$site[i],
res == min(res)) %>%
sf::read_sf(path)
sf::read_sf(low_alt$path)
low_alt <- list_pred %>%
dplyr::filter(site == list_pred$site[i],
res == min(res)) %>%
rast(path)
low_alt <- list_pred %>%
dplyr::filter(site == list_pred$site[i],
res == min(res)) %>%
pull(path) %>%
rast()
low_alt
plot(low_alt)
low_alt <- list_pred %>%
dplyr::filter(site == list_pred$site[i],
res == min(res)) %>%
pull(path) %>%
rast()%>%
dplyr::filter(layer != 0,
layer <= 8)
low_alt <- list_pred %>%
dplyr::filter(site == list_pred$site[i],
res == min(res)) %>%
pull(path) %>%
rast()%>%
rename("layer")
low_alt <- list_pred %>%
dplyr::filter(site == list_pred$site[i],
res == min(res)) %>%
pull(path) %>%
rast()%>%
rename("layer",.)
low_alt <- list_pred %>%
dplyr::filter(site == list_pred$site[i],
res == min(res)) %>%
pull(path) %>%
rast()%>%
rename(layer = ~)
low_alt <- list_pred %>%
dplyr::filter(site == list_pred$site[i],
res == min(res)) %>%
pull(path) %>%
rast()%>%
rename(layer = .)
low_alt <- list_pred %>%
dplyr::filter(site == list_pred$site[i],
res == min(res)) %>%
pull(path) %>%
rast()%>%
rename(layer = names(.))
low_alt <- list_pred %>%
dplyr::filter(site == list_pred$site[i],
res == min(res)) %>%
pull(path) %>%
rast()%>%
rename(layer = names(.)) %>%
dplyr::filter(layer != 0,
layer <= 8)
plot(low_alt)
img <- mask(img,low_alt)
plot(img)
for(i in 1:nrow(list_pred)){
img <- list_pred$path[i] %>%
rast()
names(img) <- "layer"
# ifel(img$layer == 0 | img$layer > 8, NA, img$layer)
if(i == 1){
low_alt <- list_pred %>%
dplyr::filter(site == list_pred$site[i],
res == min(res)) %>%
pull(path) %>%
rast()%>%
rename(layer = names(.)) %>%
dplyr::filter(layer != 0,
layer <= 8)
}else{
if(list_pred$site[i] != list_pred$site[i-1]){
low_alt <- list_pred %>%
dplyr::filter(site == list_pred$site[i],
res == min(res)) %>%
pull(path) %>%
rast()%>%
rename(layer = names(.)) %>%
dplyr::filter(layer != 0,
layer <= 8)
}
}
img <- mask(img,low_alt)
img <- img %>%
dplyr::filter(layer != 0,
layer <= 8) %>%
mutate(layer = as.factor(layer))
levels(img)
df_layer <- img %>%
as_tibble() %>%
# mutate(layer = as.numeric(layer)) %>%
filter(!is.na(layer),
layer != 0 ) %>%
group_by(layer) %>%
summarise(count = n()) %>%
mutate(percentage = count / sum(count) * 100,
label = paste0(layer, " (", round(percentage, 1), "%)"))
colors <- data.frame(
layer = as.character(c(1:5)),
color = c("#DAA520","#b3ff1a","#389318","#873e23","#b3002d")
)
layer_counts <- df_layer %>%
mutate(layer = as.character(layer)) %>%
# dplyr::filter(layer %in% c("3","4") ) %>%
select(layer,count) %>%
dplyr::filter(layer %in% c("1","2","3","4","5")) %>%
left_join(colors, by = "layer")
png("pie_chart.png", width = 800, height = 800, bg = "transparent")
plotrix::pie3D(layer_counts$count,
# labels = layer_counts$layer,
explode = 0.2, # Adds space between the slices
# main = "3D Pie Chart of Layer",
col = layer_counts$color)
dev.off()
img_grob <- grid::rasterGrob(png::readPNG("pie_chart.png"),
interpolate = TRUE)
plot <-  ggplot()+
tidyterra::geom_spatraster(data = img,
mapping = aes(fill = layer),
maxcell = 500832*8)+
coord_sf(crs = 4326)+
scale_fill_manual(breaks = c(1,2,3,4,5,6,7,8),
values=c("#DAA520", "#b3ff1a","#389318","#873e23","#b3002d","#797a79","white","#42c9bc"),
na.value = NA,
name = "",
labels = c("Bacillariophyceae",
"Chlorophyceae",
"Magnoliopsida",
"Phaeophyceae",
"Rhodophyceae",
"Sediment",
"Sunglint",
"Water"))+
theme_Bede_Map()+
# ggnewscale::new_scale("fill")+
# coord_equal()+
theme(axis.text.x = element_text(size = 20, angle = 20,hjust = 1),
axis.text.y = element_text(size = 20),
# axis.text.y = element_blank(),
axis.title = element_blank(),
legend.background = element_blank(),
# legend.position = c(0.98,0.3),
legend.position = "right",
legend.text = element_text(size = 20),
legend.key.size = unit(1,"cm"))
plot_limits <- ggplot_build(plot)$layout$panel_params[[1]]
x_range <- plot_limits$x_range
y_range <- plot_limits$y_range
x_position <- x_range[2] - (x_range[2] - x_range[1]) * 0.4
y_position <- y_range[1] + (y_range[2] - y_range[1]) * 0.4
plot <- plot + annotation_custom(
grob = img_grob,
xmin = x_position,
xmax = x_range[2],   # Right edge
ymin = y_range[1],   # Bottom edge
ymax = y_position    # 10% up from the bottom
)
# scale_x_continuous(limits = c(-8.7437, -8.74275), breaks = -8.743)+
# scale_y_continuous(limits = c(40.59715, 40.5979), breaks = 40.5975)
ggsave(paste0("Output/Resampling/",gsub(".tif",".png",list_pred$name[i])), plot, height = 1125*4, width = 1320*4, units = "px")
}
ext_lowres <- ext(low_alt)
ext_lowres
low_alt <- list_pred %>%
dplyr::filter(site == list_pred$site[i],
res == min(res)) %>%
pull(path) %>%
rast()%>%
rename(layer = names(.)) %>%
dplyr::filter(layer != 0,
layer <= 8)
ext_lowres <- ext(low_alt)
ext_lowres
list_pred$site[i] != list_pred$site[i-1]
ext_lowres[1]
ext_lowres[1] %>% as.numeric()
plot <-  ggplot()+
tidyterra::geom_spatraster(data = img,
mapping = aes(fill = layer),
maxcell = 500832*8)+
coord_sf(crs = 4326)+
scale_fill_manual(breaks = c(1,2,3,4,5,6,7,8),
values=c("#DAA520", "#b3ff1a","#389318","#873e23","#b3002d","#797a79","white","#42c9bc"),
na.value = NA,
name = "",
labels = c("Bacillariophyceae",
"Chlorophyceae",
"Magnoliopsida",
"Phaeophyceae",
"Rhodophyceae",
"Sediment",
"Sunglint",
"Water"))+
theme_Bede_Map()+
# ggnewscale::new_scale("fill")+
# coord_equal()+
theme(axis.text.x = element_text(size = 20, angle = 20,hjust = 1),
axis.text.y = element_text(size = 20),
# axis.text.y = element_blank(),
axis.title = element_blank(),
legend.background = element_blank(),
# legend.position = c(0.98,0.3),
legend.position = "right",
legend.text = element_text(size = 20),
legend.key.size = unit(1,"cm"))+
scale_x_continuous(limits = c(ext_lowres[1] %>% as.numeric(), ext_lowres[2] %>% as.numeric()))+
scale_y_continuous(limits = c(ext_lowres[3] %>% as.numeric(), ext_lowres[4] %>% as.numeric()))
plot_limits <- ggplot_build(plot)$layout$panel_params[[1]]
i
img <- list_pred$path[i] %>%
rast()
names(img) <- "layer"
if(i == 1){
low_alt <- list_pred %>%
dplyr::filter(site == list_pred$site[i],
res == min(res)) %>%
pull(path) %>%
rast()%>%
rename(layer = names(.)) %>%
dplyr::filter(layer != 0,
layer <= 8)
ext_lowres <- ext(low_alt)
}else{
if(list_pred$site[i] != list_pred$site[i-1]){
low_alt <- list_pred %>%
dplyr::filter(site == list_pred$site[i],
res == min(res)) %>%
pull(path) %>%
rast()%>%
rename(layer = names(.)) %>%
dplyr::filter(layer != 0,
layer <= 8)
ext_lowres <- ext(low_alt)
}
}
img <- mask(img,low_alt)
img <- list_pred$path[i] %>%
rast()
names(img) <- "layer"
if(i == 1){
low_alt <- list_pred %>%
dplyr::filter(site == list_pred$site[i],
res == min(res)) %>%
pull(path) %>%
rast()%>%
rename(layer = names(.)) %>%
dplyr::filter(layer != 0,
layer <= 8)
ext_lowres <- ext(low_alt)
}else{
if(list_pred$site[i] != list_pred$site[i-1]){
low_alt <- list_pred %>%
dplyr::filter(site == list_pred$site[i],
res == min(res)) %>%
pull(path) %>%
rast()%>%
rename(layer = names(.)) %>%
dplyr::filter(layer != 0,
layer <= 8)
ext_lowres <- ext(low_alt)
}
}
img <- img %>%
dplyr::filter(layer != 0,
layer <= 8) %>%
mutate(layer = as.factor(layer))
df_layer <- img %>%
as_tibble() %>%
# mutate(layer = as.numeric(layer)) %>%
filter(!is.na(layer),
layer != 0 ) %>%
group_by(layer) %>%
summarise(count = n()) %>%
mutate(percentage = count / sum(count) * 100,
label = paste0(layer, " (", round(percentage, 1), "%)"))
colors <- data.frame(
layer = as.character(c(1:5)),
color = c("#DAA520","#b3ff1a","#389318","#873e23","#b3002d")
)
layer_counts <- df_layer %>%
mutate(layer = as.character(layer)) %>%
# dplyr::filter(layer %in% c("3","4") ) %>%
select(layer,count) %>%
dplyr::filter(layer %in% c("1","2","3","4","5")) %>%
left_join(colors, by = "layer")
png("pie_chart.png", width = 800, height = 800, bg = "transparent")
plotrix::pie3D(layer_counts$count,
# labels = layer_counts$layer,
explode = 0.2, # Adds space between the slices
# main = "3D Pie Chart of Layer",
col = layer_counts$color)
dev.off()
img_grob <- grid::rasterGrob(png::readPNG("pie_chart.png"),
interpolate = TRUE)
plot <-  ggplot()+
tidyterra::geom_spatraster(data = img,
mapping = aes(fill = layer),
maxcell = 500832*8)+
coord_sf(crs = 4326)+
scale_fill_manual(breaks = c(1,2,3,4,5,6,7,8),
values=c("#DAA520", "#b3ff1a","#389318","#873e23","#b3002d","#797a79","white","#42c9bc"),
na.value = NA,
name = "",
labels = c("Bacillariophyceae",
"Chlorophyceae",
"Magnoliopsida",
"Phaeophyceae",
"Rhodophyceae",
"Sediment",
"Sunglint",
"Water"))+
theme_Bede_Map()+
# ggnewscale::new_scale("fill")+
# coord_equal()+
theme(axis.text.x = element_text(size = 20, angle = 20,hjust = 1),
axis.text.y = element_text(size = 20),
# axis.text.y = element_blank(),
axis.title = element_blank(),
legend.background = element_blank(),
# legend.position = c(0.98,0.3),
legend.position = "right",
legend.text = element_text(size = 20),
legend.key.size = unit(1,"cm"))+
scale_x_continuous(limits = c(ext_lowres[1] %>% as.numeric(), ext_lowres[2] %>% as.numeric()))+
scale_y_continuous(limits = c(ext_lowres[3] %>% as.numeric(), ext_lowres[4] %>% as.numeric()))
plot_limits <- ggplot_build(plot)$layout$panel_params[[1]]
x_range <- plot_limits$x_range
y_range <- plot_limits$y_range
x_position <- x_range[2] - (x_range[2] - x_range[1]) * 0.4
y_position <- y_range[1] + (y_range[2] - y_range[1]) * 0.4
plot <- plot + annotation_custom(
grob = img_grob,
xmin = x_position,
xmax = x_range[2],   # Right edge
ymin = y_range[1],   # Bottom edge
ymax = y_position    # 10% up from the bottom
)
ggsave(paste0("Output/Resampling/",gsub(".tif",".png",list_pred$name[i])), plot, height = 1125*4, width = 1320*4, units = "px")
list_pred <- list.files("Data/Predictions/Resampled",full.names = T) %>%
as_tibble() %>%
rename(path = "value") %>%
mutate(name = gsub(".*/","",path),
type = case_when(str_detect(name, "_prob.tif") ~ "Prob",
T ~ "Pred")) %>%
dplyr::filter(type == "Pred") %>%
mutate(res =sub(".*_(\\d+)cm_.*", "\\1", name) %>% as.numeric(),
ortho_name  = sub("_(\\d+)cm_.*", "", name)) %>%
arrange(ortho_name,res) %>%
mutate(site = case_when(str_detect(ortho_name, "Aveiro_1506_Highest") ~ "Aveiro",
str_detect(ortho_name, "Aveiro_boat_1706_flight_1") ~ "Boat1",
str_detect(ortho_name, "Aveiro_boat_1706_flight_2") ~ "Boat2",
str_detect(ortho_name, "NoirmoutierNorthDikeSite") ~ "NorthDike",
str_detect(ortho_name, "Duer_15072022_120m") ~ "Duer",
str_detect(ortho_name, "handfisher_Ortho") ~ "handfisher_Ortho",
str_detect(ortho_name, "Horse_rooster") ~ "Horse_rooster",
str_detect(ortho_name, "fl1_120m_handfisher_old") ~ "fl1_120m_handfisher_old",
str_detect(ortho_name, "fl2_120m_handfisher_old") ~ "fl2_120m_handfisher_old",
T ~ NA)) %>%
dplyr::filter(!site == "handfisher_Ortho")
for(i in 1:nrow(list_pred)){
img <- list_pred$path[i] %>%
rast()
names(img) <- "layer"
# ifel(img$layer == 0 | img$layer > 8, NA, img$layer)
if(i == 1){
low_alt <- list_pred %>%
dplyr::filter(site == list_pred$site[i],
res == min(res)) %>%
pull(path) %>%
rast()%>%
rename(layer = names(.)) %>%
dplyr::filter(layer != 0,
layer <= 8)
ext_lowres <- ext(low_alt)
}else{
if(list_pred$site[i] != list_pred$site[i-1]){
low_alt <- list_pred %>%
dplyr::filter(site == list_pred$site[i],
res == min(res)) %>%
pull(path) %>%
rast()%>%
rename(layer = names(.)) %>%
dplyr::filter(layer != 0,
layer <= 8)
ext_lowres <- ext(low_alt)
}
}
# img <- mask(img,low_alt)
img <- img %>%
dplyr::filter(layer != 0,
layer <= 8) %>%
mutate(layer = as.factor(layer))
# levels(img)
df_layer <- img %>%
as_tibble() %>%
# mutate(layer = as.numeric(layer)) %>%
filter(!is.na(layer),
layer != 0 ) %>%
group_by(layer) %>%
summarise(count = n()) %>%
mutate(percentage = count / sum(count) * 100,
label = paste0(layer, " (", round(percentage, 1), "%)"))
colors <- data.frame(
layer = as.character(c(1:5)),
color = c("#DAA520","#b3ff1a","#389318","#873e23","#b3002d")
)
layer_counts <- df_layer %>%
mutate(layer = as.character(layer)) %>%
# dplyr::filter(layer %in% c("3","4") ) %>%
select(layer,count) %>%
dplyr::filter(layer %in% c("1","2","3","4","5")) %>%
left_join(colors, by = "layer")
png("pie_chart.png", width = 800, height = 800, bg = "transparent")
plotrix::pie3D(layer_counts$count,
# labels = layer_counts$layer,
explode = 0.2, # Adds space between the slices
# main = "3D Pie Chart of Layer",
col = layer_counts$color)
dev.off()
img_grob <- grid::rasterGrob(png::readPNG("pie_chart.png"),
interpolate = TRUE)
plot <-  ggplot()+
tidyterra::geom_spatraster(data = img,
mapping = aes(fill = layer),
maxcell = 500832*8)+
coord_sf(crs = 4326)+
scale_fill_manual(breaks = c(1,2,3,4,5,6,7,8),
values=c("#DAA520", "#b3ff1a","#389318","#873e23","#b3002d","#797a79","white","#42c9bc"),
na.value = NA,
name = "",
labels = c("Bacillariophyceae",
"Chlorophyceae",
"Magnoliopsida",
"Phaeophyceae",
"Rhodophyceae",
"Sediment",
"Sunglint",
"Water"))+
theme_Bede_Map()+
# ggnewscale::new_scale("fill")+
# coord_equal()+
theme(axis.text.x = element_text(size = 20, angle = 20,hjust = 1),
axis.text.y = element_text(size = 20),
# axis.text.y = element_blank(),
axis.title = element_blank(),
legend.background = element_blank(),
# legend.position = c(0.98,0.3),
legend.position = "right",
legend.text = element_text(size = 20),
legend.key.size = unit(1,"cm"))+
scale_x_continuous(limits = c(ext_lowres[1] %>% as.numeric(), ext_lowres[2] %>% as.numeric()))+
scale_y_continuous(limits = c(ext_lowres[3] %>% as.numeric(), ext_lowres[4] %>% as.numeric()))
plot_limits <- ggplot_build(plot)$layout$panel_params[[1]]
x_range <- plot_limits$x_range
y_range <- plot_limits$y_range
x_position <- x_range[2] - (x_range[2] - x_range[1]) * 0.4
y_position <- y_range[1] + (y_range[2] - y_range[1]) * 0.4
plot <- plot + annotation_custom(
grob = img_grob,
xmin = x_position,
xmax = x_range[2],   # Right edge
ymin = y_range[1],   # Bottom edge
ymax = y_position    # 10% up from the bottom
)
ggsave(paste0("Output/Resampling/",gsub(".tif",".png",list_pred$name[i])), plot, height = 1125*4, width = 1320*4, units = "px")
}
list_pred$site[i]
unique(list_pred$site)
mask <- vect("Data/shp/Aveiro/background_Gafanha_high.shp")
img <- mask(img,mask)
plot(img)
img <- list_pred$path[i] %>%
rast()
names(img) <- "layer"
img <- img %>%
dplyr::filter(layer != 0,
layer <= 8) %>%
mutate(layer = as.factor(layer))
read_sf("Data/shp/Aveiro/background_Gafanha_high.shp")
mask <- read_sf("Data/shp/Aveiro/background_Gafanha_high.shp") %>%
dplyr::filter(type != "Land")
mask <- read_sf("Data/shp/Aveiro/background_Gafanha_high.shp") %>%
dplyr::filter(Type != "Land")
plot(mask)
img <- mask(img,mask)
plot(img)
read_sf("Data/shp/Aveiro/background_Gafanha_high.shp") %>%
dplyr::filter(Type != "Land")
mask <- read_sf("Data/shp/Aveiro/background_Gafanha_high.shp") %>%
dplyr::filter(Type != "Land")
plot(mask)
plot(mask)
plot(mask)
plot(mask)
plot(mask)
plot(mask$Type)
plot(mask$geometry)
