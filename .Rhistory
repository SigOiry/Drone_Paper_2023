ID == 3 ~ "Bourgneuf Bay",
TRUE ~ "NA"),
ID = case_when(ID == 1 ~ "Portugal",
ID == 2 ~ "France",
TRUE ~ "France")) %>%
dplyr::select(c(lon,lat,ID,Site))
ggplot(MiniEU_map) +
geom_sf(linewidth=0.5,alpha=0.93,
fill="#CFCFCF",colour="grey30")+
ggforce::geom_mark_ellipse(data=df_P2,
aes(x=lon,
y=lat,
label = ID,
description=Site) ,
linewidth=0.3,
label.width = 10,
fill="goldenrod",
show.legend=F,
label.hjust = 0.5,
con.size = 2,
con.colour = "goldenrod4",
label.fontsize = c(25,20),
alpha=0.8,
expand = unit(2, "mm") ,
radius = unit(2, "mm") ,
label.buffer = unit(10, "mm") ,
label.fill = "grey90")+
coord_sf(xlim=c(2600000,4100000) ,
ylim=c(1600000,3100000))+
theme_void()+
labs(x="Longitude",
y="Latitude")+
scale_y_continuous(labels=scaleFUN)
ggplot(MiniEU_map) +
geom_sf(linewidth=0.5,alpha=0.93,
fill="#CFCFCF",colour="grey30")+
ggforce::geom_mark_ellipse(data=df_P2,
aes(x=lon,
y=lat,
label = ID,
description=Site) ,
linewidth=0.3,
label.width = 20,
fill="goldenrod",
show.legend=F,
label.hjust = 0.5,
con.size = 2,
con.colour = "goldenrod4",
label.fontsize = c(25,20),
alpha=0.8,
expand = unit(2, "mm") ,
radius = unit(2, "mm") ,
label.buffer = unit(10, "mm") ,
label.fill = "grey90")+
coord_sf(xlim=c(2600000,4100000) ,
ylim=c(1600000,3100000))+
theme_void()+
labs(x="Longitude",
y="Latitude")+
scale_y_continuous(labels=scaleFUN)
p2  <-
ggplot(MiniEU_map) +
geom_sf(linewidth=0.5,alpha=0.93,
fill="#CFCFCF",colour="grey30")+
ggforce::geom_mark_ellipse(data=df_P2,
aes(x=lon,
y=lat,
label = ID,
description=Site) ,
linewidth=0.3,
label.width = 20,
fill="goldenrod",
show.legend=F,
label.hjust = 0.5,
con.size = 2,
con.colour = "goldenrod4",
label.fontsize = c(25,20),
alpha=0.8,
expand = unit(2, "mm") ,
radius = unit(2, "mm") ,
label.buffer = unit(10, "mm") ,
label.fill = "grey90")+
coord_sf(xlim=c(2600000,4100000) ,
ylim=c(1600000,3100000))+
theme_void()+
labs(x="Longitude",
y="Latitude")+
scale_y_continuous(labels=scaleFUN)
ggsave("Figures/High_res/Figure1/Graphical_Abstract_Map.png",p2,width= 10, height=10)
#| cache: false
#| echo: false
#| warning: false
#| eval: true
library(flextable)
library(tidyverse)
library(tidyterra)
# library(tidymodels)
library(Utilities.Package)
library(patchwork)
library(sf)
library(rnaturalearth)
library(rnaturalearthdata)
library(rnaturalearthhires)
library(ggforce)
library(patchwork)
library(terra)
library(gt)
library(scales)
library(magick)
library(grid)
library(ggforce)
library(statebins)
library(ggridges)
library(ggspatial)
library(terrainr)
# library(ggpmisc)
library(broom)
library(stars)
library(gmodels)
library(caret)
library(rstudioapi)
library(terra)
options(scipen = 100000000)
terraOptions(cores = 12)
img_list <- list.files("Data/BiCOME_Flights", pattern = ".tif", recursive = T, full.names = T) %>%
as_tibble() %>%
rename(path = "value") %>%
mutate(name = gsub(".*/","",path),
sites = case_when(str_detect(path, "Boat1") ~ "Boat1",
str_detect(path, "Boat2") ~ "Boat2",
str_detect(path, "GafanhaHigh") ~ "GafanhaHigh",
str_detect(path, "GafanhaLow") ~ "GafanhaLow",
str_detect(path, "Horse_rooster") ~ "Horse_rooster",
str_detect(path, "Gois") ~ "Gois",
str_detect(path, "Handfisher_1") ~ "Handfisher_1",
str_detect(path, "Handfisher_2") ~ "Handfisher_2",
str_detect(path, "NorthDike") ~ "NorthDike",
str_detect(path, "Arz") ~ "Arz",
str_detect(path, "DuerHigh") ~ "DuerHigh",
str_detect(path, "DuerLow") ~ "DuerLow",
str_detect(path, "Kerdrean") ~ "Kerdrean",
str_detect(path, "Locmariaquer") ~ "Locmariaquer"),
type = case_when(str_detect(name, "Preds") ~ "Pred",
str_detect(name, "Probs") ~ "Prob",
T ~ "Ortho"),
filter = case_when(str_detect(path,"Majority_filter_21by21")~ "21",
str_detect(path,"Majority_filter_7by7")~ "7",
str_detect(path,"Majority_filter")~ "3",
str_detect(path,"RAW")~ "RAW",
T ~ "NA"),
UTM_zone = case_when(str_detect(path, "Aveiro") ~ 32629,
TRUE ~ 32630)) %>%
dplyr::filter(!str_detect(path, ".tif.aux.xml"),
!str_detect(path, ".tif.enp"),
type == "Ortho")
i=1
img <- terra::rast(img_list$path[i]) %>%
terra::project(paste0("EPSG:", img_list$UTM_zone[i]), cores = 12)
img <- terra::rast(img_list$path[i]) %>%
terra::project(paste0("EPSG:", img_list$UTM_zone[i]), thread = T)
new_res <- 10/100
r_template <- rast(ext(img), resolution = new_res, crs = crs(img))
r_resampled <- terra::resample(img, r_template, method="bilinear", threads = T)  # or method="nearest"
r_resampled1 <- terra::resample(img, r_template, method="bilinear", threads = 12)  # or method="nearest"
r_resampled
res_to_resample <- c(10,15,20,25,30,35,40,45,50,55,60,65,70,75,80,85,90,95,100,200,300,400,500,600,700,800,900,1000,1500,20000,2500,3000)
res_to_resample <- c(10,15,20,25,30,35,40,45,50,55,60,65,70,75,80,85,90,95,100,200,300,400,500,600,700,800,900,1000,1500,20000,2500,3000)
library(progress)
dir.create(paste0("Data/Resampling/",res_to_resample[ii],"cm"), recursive = T)
ii=1
dir.create(paste0("Data/Resampling/",res_to_resample[ii],"cm"), recursive = T)
dir.exists(paste0("Data/Resampling/",res_to_resample[ii],"cm"))
paste0("Data/Resampling/",res_to_resample[ii],"cm")
img_list$name[i]
paste0("Data/Resampling/",res_to_resample[ii],"cm/",gsub(".tif",paste0("_",res_to_resample[ii],"cm.tif"),img_list$name[i])
paste0("_",res_to_resample[ii],"cm.tif")
gsub(".tif",paste0("_",res_to_resample[ii],"cm.tif"),img_list$name[i])
paste0("Data/Resampling/",res_to_resample[ii],"cm/",gsub(".tif",paste0("_",res_to_resample[ii],"cm.tif"),img_list$name[i]))
pb1 <- progress_bar$new(
format = "  Processing [:bar] :percent in :elapsed",
total = nrow(img_list),    # Total number of iterations
width = 60    # Width of the progress bar
)
for(i in 1:nrow(img_list)){
pb1$tick()
img <- terra::rast(img_list$path[i]) %>%
terra::project(paste0("EPSG:", img_list$UTM_zone[i]), thread = T)
pb2 <- progress_bar$new(
format = "  Processing [:bar] :percent in :elapsed",
total = length(res_to_resample),    # Total number of iterations
width = 60    # Width of the progress bar
)
for(ii in 1:length(res_to_resample)){
pb2$tick()
new_res <- res_to_resample[ii]/100
r_template <- rast(ext(img), resolution = new_res, crs = crs(img))
r_resampled <- terra::resample(img, r_template, method="bilinear", threads = T)%>%
terra::project("EPSG:4326", thread = T)
if(i == 1){
if(!dir.exists(paste0("Data/Resampling/",res_to_resample[ii],"cm"))){
dir.create(paste0("Data/Resampling/",res_to_resample[ii],"cm"), recursive = T)
}
}
writeRaster(r_resampled, paste0("Data/Resampling/",res_to_resample[ii],"cm/",gsub(".tif",paste0("_",res_to_resample[ii],"cm.tif"),img_list$name[i])))
}
}
img_list <- list.files("Data/BiCOME_Flights", pattern = ".tif", recursive = T, full.names = T) %>%
as_tibble() %>%
rename(path = "value") %>%
mutate(name = gsub(".*/","",path),
sites = case_when(str_detect(path, "Boat1") ~ "Boat1",
str_detect(path, "Boat2") ~ "Boat2",
str_detect(path, "GafanhaHigh") ~ "GafanhaHigh",
str_detect(path, "GafanhaLow") ~ "GafanhaLow",
str_detect(path, "Horse_rooster") ~ "Horse_rooster",
str_detect(path, "Gois") ~ "Gois",
str_detect(path, "Handfisher_1") ~ "Handfisher_1",
str_detect(path, "Handfisher_2") ~ "Handfisher_2",
str_detect(path, "NorthDike") ~ "NorthDike",
str_detect(path, "Arz") ~ "Arz",
str_detect(path, "DuerHigh") ~ "DuerHigh",
str_detect(path, "DuerLow") ~ "DuerLow",
str_detect(path, "Kerdrean") ~ "Kerdrean",
str_detect(path, "Locmariaquer") ~ "Locmariaquer"),
type = case_when(str_detect(name, "Preds") ~ "Pred",
str_detect(name, "Probs") ~ "Prob",
T ~ "Ortho"),
filter = case_when(str_detect(path,"Majority_filter_21by21")~ "21",
str_detect(path,"Majority_filter_7by7")~ "7",
str_detect(path,"Majority_filter")~ "3",
str_detect(path,"RAW")~ "RAW",
T ~ "NA"),
UTM_zone = case_when(str_detect(path, "Aveiro") ~ 32629,
TRUE ~ 32630)) %>%
dplyr::filter(!str_detect(path, ".tif.aux.xml"),
!str_detect(path, ".tif.enp"),
type == "Ortho")
res_to_resample <- c(2000)
for(i in 1:nrow(img_list)){
img <- terra::rast(img_list$path[i]) %>%
terra::project(paste0("EPSG:", img_list$UTM_zone[i]), thread = T)
pb2 <- progress_bar$new(
format = "  Processing [:bar] :percent in :elapsed",
total = length(res_to_resample),    # Total number of iterations
width = 60    # Width of the progress bar
)
for(ii in 1:length(res_to_resample)){
pb2$tick()
new_res <- res_to_resample[ii]/100
r_template <- rast(ext(img), resolution = new_res, crs = crs(img))
r_resampled <- terra::resample(img, r_template, method="bilinear", threads = T)%>%
terra::project("EPSG:4326", thread = T)
if(i == 1){
if(!dir.exists(paste0("Data/Resampling/",res_to_resample[ii],"cm"))){
dir.create(paste0("Data/Resampling/",res_to_resample[ii],"cm"), recursive = T)
}
}
writeRaster(r_resampled, paste0("Data/Resampling/",res_to_resample[ii],"cm/",gsub(".tif",paste0("_",res_to_resample[ii],"cm.tif"),img_list$name[i])))
}
}
img <- terra::rast(img_list$path[i]) %>%
terra::project(paste0("EPSG:", img_list$UTM_zone[i]), thread = T)
img_list <- list.files("Data/BiCOME_Flights", pattern = ".tif", recursive = T, full.names = T) %>%
as_tibble() %>%
rename(path = "value") %>%
mutate(name = gsub(".*/","",path),
sites = case_when(str_detect(path, "Boat1") ~ "Boat1",
str_detect(path, "Boat2") ~ "Boat2",
str_detect(path, "GafanhaHigh") ~ "GafanhaHigh",
str_detect(path, "GafanhaLow") ~ "GafanhaLow",
str_detect(path, "Horse_rooster") ~ "Horse_rooster",
str_detect(path, "Gois") ~ "Gois",
str_detect(path, "Handfisher_1") ~ "Handfisher_1",
str_detect(path, "Handfisher_2") ~ "Handfisher_2",
str_detect(path, "NorthDike") ~ "NorthDike",
str_detect(path, "Arz") ~ "Arz",
str_detect(path, "DuerHigh") ~ "DuerHigh",
str_detect(path, "DuerLow") ~ "DuerLow",
str_detect(path, "Kerdrean") ~ "Kerdrean",
str_detect(path, "Locmariaquer") ~ "Locmariaquer"),
type = case_when(str_detect(name, "Preds") ~ "Pred",
str_detect(name, "Probs") ~ "Prob",
T ~ "Ortho"),
filter = case_when(str_detect(path,"Majority_filter_21by21")~ "21",
str_detect(path,"Majority_filter_7by7")~ "7",
str_detect(path,"Majority_filter")~ "3",
str_detect(path,"RAW")~ "RAW",
T ~ "NA"),
UTM_zone = case_when(str_detect(path, "Aveiro") ~ 32629,
TRUE ~ 32630)) %>%
dplyr::filter(!str_detect(path, ".tif.aux.xml"),
!str_detect(path, ".tif.enp"),
type == "Ortho")
#| cache: false
#| echo: false
#| warning: false
#| eval: true
library(flextable)
library(tidyverse)
library(tidyterra)
# library(tidymodels)
library(Utilities.Package)
library(patchwork)
library(sf)
library(rnaturalearth)
library(rnaturalearthdata)
library(rnaturalearthhires)
library(ggforce)
library(patchwork)
library(terra)
library(gt)
library(scales)
library(magick)
library(grid)
library(ggforce)
library(statebins)
library(ggridges)
library(ggspatial)
library(terrainr)
# library(ggpmisc)
library(broom)
library(stars)
library(gmodels)
library(caret)
library(rstudioapi)
library(terra)
options(scipen = 100000000)
# terraOptions(cores = 12)
img_list <- list.files("Data/BiCOME_Flights", pattern = ".tif", recursive = T, full.names = T) %>%
as_tibble() %>%
rename(path = "value") %>%
mutate(name = gsub(".*/","",path),
sites = case_when(str_detect(path, "Boat1") ~ "Boat1",
str_detect(path, "Boat2") ~ "Boat2",
str_detect(path, "GafanhaHigh") ~ "GafanhaHigh",
str_detect(path, "GafanhaLow") ~ "GafanhaLow",
str_detect(path, "Horse_rooster") ~ "Horse_rooster",
str_detect(path, "Gois") ~ "Gois",
str_detect(path, "Handfisher_1") ~ "Handfisher_1",
str_detect(path, "Handfisher_2") ~ "Handfisher_2",
str_detect(path, "NorthDike") ~ "NorthDike",
str_detect(path, "Arz") ~ "Arz",
str_detect(path, "DuerHigh") ~ "DuerHigh",
str_detect(path, "DuerLow") ~ "DuerLow",
str_detect(path, "Kerdrean") ~ "Kerdrean",
str_detect(path, "Locmariaquer") ~ "Locmariaquer"),
type = case_when(str_detect(name, "Preds") ~ "Pred",
str_detect(name, "Probs") ~ "Prob",
T ~ "Ortho"),
filter = case_when(str_detect(path,"Majority_filter_21by21")~ "21",
str_detect(path,"Majority_filter_7by7")~ "7",
str_detect(path,"Majority_filter")~ "3",
str_detect(path,"RAW")~ "RAW",
T ~ "NA"),
UTM_zone = case_when(str_detect(path, "Aveiro") ~ 32629,
TRUE ~ 32630)) %>%
dplyr::filter(!str_detect(path, ".tif.aux.xml"),
!str_detect(path, ".tif.enp"),
type == "Ortho")
# res_to_resample <- c(10,15,20,25,30,35,40,45,50,55,60,65,70,75,80,85,90,95,100,200,300,400,500,600,700,800,900,1000,1500,2000,2500,3000)
res_to_resample <- c(2000)
i=1
img <- terra::rast(img_list$path[i]) %>%
terra::project(paste0("EPSG:", img_list$UTM_zone[i]), thread = T)
pb2 <- progress_bar$new(
format = "  Processing [:bar] :percent in :elapsed",
total = length(res_to_resample),    # Total number of iterations
width = 60    # Width of the progress bar
)
library(progress)
pb2 <- progress_bar$new(
format = "  Processing [:bar] :percent in :elapsed",
total = length(res_to_resample),    # Total number of iterations
width = 60    # Width of the progress bar
)
for(ii in 1:length(res_to_resample)){
pb2$tick()
new_res <- res_to_resample[ii]/100
r_template <- rast(ext(img), resolution = new_res, crs = crs(img))
r_resampled <- terra::resample(img, r_template, method="bilinear", threads = T)%>%
terra::project("EPSG:4326", thread = T)
if(i == 1){
if(!dir.exists(paste0("Data/Resampling/",res_to_resample[ii],"cm"))){
dir.create(paste0("Data/Resampling/",res_to_resample[ii],"cm"), recursive = T)
}
}
writeRaster(r_resampled, paste0("Data/Resampling/",res_to_resample[ii],"cm/",gsub(".tif",paste0("_",res_to_resample[ii],"cm.tif"),img_list$name[i])))
}
pb2 <- progress_bar$new(
format = "  Processing [:bar] :percent in :elapsed",
total = length(res_to_resample),    # Total number of iterations
width = 60    # Width of the progress bar
)
for(i in 2:nrow(img_list)){
pb2$tick()
img <- terra::rast(img_list$path[i]) %>%
terra::project(paste0("EPSG:", img_list$UTM_zone[i]), thread = T)
for(ii in 1:length(res_to_resample)){
new_res <- res_to_resample[ii]/100
r_template <- rast(ext(img), resolution = new_res, crs = crs(img))
r_resampled <- terra::resample(img, r_template, method="bilinear", threads = T)%>%
terra::project("EPSG:4326", thread = T)
if(i == 1){
if(!dir.exists(paste0("Data/Resampling/",res_to_resample[ii],"cm"))){
dir.create(paste0("Data/Resampling/",res_to_resample[ii],"cm"), recursive = T)
}
}
writeRaster(r_resampled, paste0("Data/Resampling/",res_to_resample[ii],"cm/",gsub(".tif",paste0("_",res_to_resample[ii],"cm.tif"),img_list$name[i])))
}
}
for(i in 1:nrow(img_list)){
# pb2$tick()
img <- terra::rast(img_list$path[i]) %>%
terra::project(paste0("EPSG:", img_list$UTM_zone[i]), thread = T)
for(ii in 1:length(res_to_resample)){
new_res <- res_to_resample[ii]/100
r_template <- rast(ext(img), resolution = new_res, crs = crs(img))
r_resampled <- terra::resample(img, r_template, method="bilinear", threads = T)%>%
terra::project("EPSG:4326", thread = T)
if(i == 1){
if(!dir.exists(paste0("Data/Resampling/",res_to_resample[ii],"cm"))){
dir.create(paste0("Data/Resampling/",res_to_resample[ii],"cm"), recursive = T)
}
}
writeRaster(r_resampled, paste0("Data/Resampling/",res_to_resample[ii],"cm/",gsub(".tif",paste0("_",res_to_resample[ii],"cm.tif"),img_list$name[i])))
}
}
paste0("Data/Resampling/",res_to_resample[ii],"cm/",gsub(".tif",paste0("_",res_to_resample[ii],"cm.tif"),img_list$name[i]))
for(i in 2:nrow(img_list)){
# pb2$tick()
img <- terra::rast(img_list$path[i]) %>%
terra::project(paste0("EPSG:", img_list$UTM_zone[i]), thread = T)
for(ii in 1:length(res_to_resample)){
new_res <- res_to_resample[ii]/100
r_template <- rast(ext(img), resolution = new_res, crs = crs(img))
r_resampled <- terra::resample(img, r_template, method="bilinear", threads = T)%>%
terra::project("EPSG:4326", thread = T)
if(i == 1){
if(!dir.exists(paste0("Data/Resampling/",res_to_resample[ii],"cm"))){
dir.create(paste0("Data/Resampling/",res_to_resample[ii],"cm"), recursive = T)
}
}
writeRaster(r_resampled, paste0("Data/Resampling/",res_to_resample[ii],"cm/",gsub(".tif",paste0("_",res_to_resample[ii],"cm.tif"),img_list$name[i])),overwrite = T)
}
}
for(i in 12:nrow(img_list)){
# pb2$tick()
img <- terra::rast(img_list$path[i]) %>%
terra::project(paste0("EPSG:", img_list$UTM_zone[i]), thread = T)
for(ii in 1:length(res_to_resample)){
new_res <- res_to_resample[ii]/100
r_template <- rast(ext(img), resolution = new_res, crs = crs(img))
r_resampled <- terra::resample(img, r_template, method="bilinear", threads = T)%>%
terra::project("EPSG:4326", thread = T)
if(i == 1){
if(!dir.exists(paste0("Data/Resampling/",res_to_resample[ii],"cm"))){
dir.create(paste0("Data/Resampling/",res_to_resample[ii],"cm"), recursive = T)
}
}
writeRaster(r_resampled, paste0("Data/Resampling/",res_to_resample[ii],"cm/",gsub(".tif",paste0("_",res_to_resample[ii],"cm.tif"),img_list$name[i])),overwrite = T)
}
}
img_list <- list.files("Data/BiCOME_Flights", pattern = ".tif", recursive = T, full.names = T) %>%
as_tibble() %>%
rename(path = "value") %>%
mutate(name = gsub(".*/","",path),
sites = case_when(str_detect(path, "Boat1") ~ "Boat1",
str_detect(path, "Boat2") ~ "Boat2",
str_detect(path, "GafanhaHigh") ~ "GafanhaHigh",
str_detect(path, "GafanhaLow") ~ "GafanhaLow",
str_detect(path, "Horse_rooster") ~ "Horse_rooster",
str_detect(path, "Gois") ~ "Gois",
str_detect(path, "Handfisher_1") ~ "Handfisher_1",
str_detect(path, "Handfisher_2") ~ "Handfisher_2",
str_detect(path, "NorthDike") ~ "NorthDike",
str_detect(path, "Arz") ~ "Arz",
str_detect(path, "DuerHigh") ~ "DuerHigh",
str_detect(path, "DuerLow") ~ "DuerLow",
str_detect(path, "Kerdrean") ~ "Kerdrean",
str_detect(path, "Locmariaquer") ~ "Locmariaquer"),
type = case_when(str_detect(name, "Preds") ~ "Pred",
str_detect(name, "Probs") ~ "Prob",
T ~ "Ortho"),
filter = case_when(str_detect(path,"Majority_filter_21by21")~ "21",
str_detect(path,"Majority_filter_7by7")~ "7",
str_detect(path,"Majority_filter")~ "3",
str_detect(path,"RAW")~ "RAW",
T ~ "NA"),
UTM_zone = case_when(str_detect(path, "Aveiro") ~ 32629,
TRUE ~ 32630)) %>%
dplyr::filter(!str_detect(path, ".tif.aux.xml"),
!str_detect(path, ".tif.enp"),
type == "Ortho")
# res_to_resample <- c(10,15,20,25,30,35,40,45,50,55,60,65,70,75,80,85,90,95,100,200,300,400,500,600,700,800,900,1000,1500,2000,2500,3000)
res_to_resample <- c(2000)
for(i in 12:nrow(img_list)){
# pb2$tick()
img <- terra::rast(img_list$path[i]) %>%
terra::project(paste0("EPSG:", img_list$UTM_zone[i]), thread = T)
for(ii in 1:length(res_to_resample)){
new_res <- res_to_resample[ii]/100
r_template <- rast(ext(img), resolution = new_res, crs = crs(img))
r_resampled <- terra::resample(img, r_template, method="bilinear", threads = T)%>%
terra::project("EPSG:4326", thread = T)
if(i == 1){
if(!dir.exists(paste0("Data/Resampling/",res_to_resample[ii],"cm"))){
dir.create(paste0("Data/Resampling/",res_to_resample[ii],"cm"), recursive = T)
}
}
writeRaster(r_resampled, paste0("Data/Resampling/",res_to_resample[ii],"cm/",gsub(".tif",paste0("_",res_to_resample[ii],"cm.tif"),img_list$name[i])),overwrite = T)
}
}
